{
  "api/Itsm.Tdx.WebApi.Accounts.AccountItemRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.Accounts.AccountItemRequestBuilder.html",
    "title": "Class AccountItemRequestBuilder | TdxWebApiDocs",
    "summary": "Class AccountItemRequestBuilder Namespace Itsm.Tdx.WebApi.Accounts Assembly Itsm.Tdx.WebApi.dll Provides operations to retrieve information about a specific account/department in the TeamDynamix system. public class AccountItemRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder AccountItemRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AccountItemRequestBuilder(string, TdxBaseClient) Initializes a new instance of the AccountItemRequestBuilder class. public AccountItemRequestBuilder(string path, TdxBaseClient client) Parameters path string The path segment for the specific account resource. client TdxBaseClient The TdxBaseClient used to send HTTP requests. Methods GetAsync() Retrieves detailed information for a specific Account. public Task<Account> GetAsync() Returns Task<Account> An Account object with full details."
  },
  "api/Itsm.Tdx.WebApi.Accounts.AccountsRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.Accounts.AccountsRequestBuilder.html",
    "title": "Class AccountsRequestBuilder | TdxWebApiDocs",
    "summary": "Class AccountsRequestBuilder Namespace Itsm.Tdx.WebApi.Accounts Assembly Itsm.Tdx.WebApi.dll Contains methods for working with accounts/departments. public class AccountsRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder AccountsRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AccountsRequestBuilder(TdxBaseClient) Initializes a new instance of the AccountsRequestBuilder class. Gets a list of all active accounts/departments. public AccountsRequestBuilder(TdxBaseClient client) Parameters client TdxBaseClient The TdxBaseClient used for requests. Remarks Will not return full account/department information. Methods GetAsync() Retrieves a list of all active accounts/departments. public Task<List<Account>> GetAsync() Returns Task<List<Account>> A list of Account objects."
  },
  "api/Itsm.Tdx.WebApi.Accounts.Models.Account.html": {
    "href": "api/Itsm.Tdx.WebApi.Accounts.Models.Account.html",
    "title": "Class Account | TdxWebApiDocs",
    "summary": "Class Account Namespace Itsm.Tdx.WebApi.Accounts.Models Assembly Itsm.Tdx.WebApi.dll public class Account Inheritance object Account Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address1 [JsonProperty(\"Address1\")] public string? Address1 { get; set; } Property Value string Address2 [JsonProperty(\"Address2\")] public string? Address2 { get; set; } Property Value string Address3 [JsonProperty(\"Address3\")] public string? Address3 { get; set; } Property Value string Address4 [JsonProperty(\"Address4\")] public string? Address4 { get; set; } Property Value string Attributes [JsonProperty(\"Attributes\")] public List<object>? Attributes { get; set; } Property Value List<object> City [JsonProperty(\"City\")] public string? City { get; set; } Property Value string Code [JsonProperty(\"Code\")] public string? Code { get; set; } Property Value string Country [JsonProperty(\"Country\")] public string? Country { get; set; } Property Value string CreatedDate [JsonProperty(\"CreatedDate\")] public DateTime CreatedDate { get; set; } Property Value DateTime Fax [JsonProperty(\"Fax\")] public string? Fax { get; set; } Property Value string ID [JsonProperty(\"ID\")] public required int ID { get; set; } Property Value int IndustryID [JsonProperty(\"IndustryID\")] public int IndustryID { get; set; } Property Value int IndustryName [JsonProperty(\"IndustryName\")] public object? IndustryName { get; set; } Property Value object IsActive [JsonProperty(\"IsActive\")] public bool IsActive { get; set; } Property Value bool ManagerFullName [JsonProperty(\"ManagerFullName\")] public string? ManagerFullName { get; set; } Property Value string ManagerUID [JsonProperty(\"ManagerUID\")] public string? ManagerUID { get; set; } Property Value string ModifiedDate [JsonProperty(\"ModifiedDate\")] public DateTime ModifiedDate { get; set; } Property Value DateTime Name [JsonProperty(\"Name\")] public string? Name { get; set; } Property Value string Notes [JsonProperty(\"Notes\")] public string? Notes { get; set; } Property Value string ParentID [JsonProperty(\"ParentID\")] public int? ParentID { get; set; } Property Value int? ParentName [JsonProperty(\"ParentName\")] public string? ParentName { get; set; } Property Value string Phone [JsonProperty(\"Phone\")] public string? Phone { get; set; } Property Value string PostalCode [JsonProperty(\"PostalCode\")] public string? PostalCode { get; set; } Property Value string StateAbbr [JsonProperty(\"StateAbbr\")] public string? StateAbbr { get; set; } Property Value string StateName [JsonProperty(\"StateName\")] public string? StateName { get; set; } Property Value string Url [JsonProperty(\"Url\")] public string? Url { get; set; } Property Value string"
  },
  "api/Itsm.Tdx.WebApi.Accounts.Models.html": {
    "href": "api/Itsm.Tdx.WebApi.Accounts.Models.html",
    "title": "Namespace Itsm.Tdx.WebApi.Accounts.Models | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Accounts.Models Classes Account"
  },
  "api/Itsm.Tdx.WebApi.Accounts.html": {
    "href": "api/Itsm.Tdx.WebApi.Accounts.html",
    "title": "Namespace Itsm.Tdx.WebApi.Accounts | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Accounts Classes AccountItemRequestBuilder Provides operations to retrieve information about a specific account/department in the TeamDynamix system. AccountsRequestBuilder Contains methods for working with accounts/departments."
  },
  "api/Itsm.Tdx.WebApi.BaseRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.BaseRequestBuilder.html",
    "title": "Class BaseRequestBuilder | TdxWebApiDocs",
    "summary": "Class BaseRequestBuilder Namespace Itsm.Tdx.WebApi Assembly Itsm.Tdx.WebApi.dll public abstract class BaseRequestBuilder Inheritance object BaseRequestBuilder Derived AccountItemRequestBuilder AccountsRequestBuilder PeopleRequestBuilder PersonByIdRequestBuilder PersonSearchRequestBuilder TicketCreateObjectRequestBuilder TicketCreateRequestBuilder TicketItemRequestBuilder TicketsRequestBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BaseRequestBuilder(string, TdxBaseClient) protected BaseRequestBuilder(string path, TdxBaseClient client) Parameters path string client TdxBaseClient Fields Client protected readonly TdxBaseClient Client Field Value TdxBaseClient Path protected readonly string Path Field Value string Methods CreateRequest(HttpMethod, string, object?) protected HttpRequestMessage CreateRequest(HttpMethod method, string relativePath = \"\", object? body = null) Parameters method HttpMethod relativePath string body object Returns HttpRequestMessage SendAsync(HttpRequestMessage) protected Task SendAsync(HttpRequestMessage request) Parameters request HttpRequestMessage Returns Task SendAsync<T>(HttpRequestMessage) protected Task<T> SendAsync<T>(HttpRequestMessage request) Parameters request HttpRequestMessage Returns Task<T> Type Parameters T"
  },
  "api/Itsm.Tdx.WebApi.Extensions.TdxClientOptions.html": {
    "href": "api/Itsm.Tdx.WebApi.Extensions.TdxClientOptions.html",
    "title": "Class TdxClientOptions | TdxWebApiDocs",
    "summary": "Class TdxClientOptions Namespace Itsm.Tdx.WebApi.Extensions Assembly Itsm.Tdx.WebApi.dll public class TdxClientOptions Inheritance object TdxClientOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BaseApiUrl Optional The fully formed base API URL. If not set, it's built from the Tenant. public string? BaseApiUrl { get; set; } Property Value string EnableThrottleCountdownLogging public bool EnableThrottleCountdownLogging { get; set; } Property Value bool MaxRetries The number of retry attempts after a 429 response. Default is 1. public int MaxRetries { get; set; } Property Value int OnThrottleContinue Invoked after waiting completes and before retrying the request. public Action? OnThrottleContinue { get; set; } Property Value Action OnThrottleWait Invoked before waiting due to a throttling response (HTTP 429). public Action<TimeSpan>? OnThrottleWait { get; set; } Property Value Action<TimeSpan>"
  },
  "api/Itsm.Tdx.WebApi.Extensions.html": {
    "href": "api/Itsm.Tdx.WebApi.Extensions.html",
    "title": "Namespace Itsm.Tdx.WebApi.Extensions | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Extensions Classes TdxClientOptions"
  },
  "api/Itsm.Tdx.WebApi.People.Models.User.html": {
    "href": "api/Itsm.Tdx.WebApi.People.Models.User.html",
    "title": "Class User | TdxWebApiDocs",
    "summary": "Class User Namespace Itsm.Tdx.WebApi.People.Models Assembly Itsm.Tdx.WebApi.dll public class User Inheritance object User Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AboutMe [JsonProperty(\"AboutMe\")] public string? AboutMe { get; set; } Property Value string AlertEmail [JsonProperty(\"AlertEmail\")] public string? AlertEmail { get; set; } Property Value string AlternateEmail [JsonProperty(\"AlternateEmail\")] public string? AlternateEmail { get; set; } Property Value string AlternateId [JsonProperty(\"AlternateID\")] public string? AlternateId { get; set; } Property Value string Applications [JsonProperty(\"Applications\")] public List<object>? Applications { get; set; } Property Value List<object> ApplyTechnicianSignatureToReplies [JsonProperty(\"ApplyTechnicianSignatureToReplies\")] public bool ApplyTechnicianSignatureToReplies { get; set; } Property Value bool ApplyTechnicianSignatureToUpdatesAndComments [JsonProperty(\"ApplyTechnicianSignatureToUpdatesAndComments\")] public bool ApplyTechnicianSignatureToUpdatesAndComments { get; set; } Property Value bool Attributes [JsonProperty(\"Attributes\")] public List<object>? Attributes { get; set; } Property Value List<object> AuthenticationProviderId [JsonProperty(\"AuthenticationProviderID\")] public int AuthenticationProviderId { get; set; } Property Value int AuthenticationUserName [JsonProperty(\"AuthenticationUserName\")] public string? AuthenticationUserName { get; set; } Property Value string BeId [JsonProperty(\"BEID\")] public string? BeId { get; set; } Property Value string BeIdInt [JsonProperty(\"BEIDInt\")] public int BeIdInt { get; set; } Property Value int Company [JsonProperty(\"Company\")] public string? Company { get; set; } Property Value string CostRate [JsonProperty(\"CostRate\")] public double CostRate { get; set; } Property Value double DefaultAccountId [JsonProperty(\"DefaultAccountID\")] public int DefaultAccountId { get; set; } Property Value int DefaultAccountName [JsonProperty(\"DefaultAccountName\")] public string? DefaultAccountName { get; set; } Property Value string DefaultPriorityID [JsonProperty(\"DefaultPriorityID\")] public int DefaultPriorityID { get; set; } Property Value int DefaultPriorityName [JsonProperty(\"DefaultPriorityName\")] public string? DefaultPriorityName { get; set; } Property Value string DefaultRate [JsonProperty(\"DefaultRate\")] public double DefaultRate { get; set; } Property Value double EndDate [JsonProperty(\"EndDate\")] public DateTime EndDate { get; set; } Property Value DateTime ExternalId [JsonProperty(\"ExternalID\")] public string? ExternalId { get; set; } Property Value string Fax [JsonProperty(\"Fax\")] public string? Fax { get; set; } Property Value string FirstName [JsonProperty(\"FirstName\")] public string? FirstName { get; set; } Property Value string FullName [JsonProperty(\"FullName\")] public string? FullName { get; set; } Property Value string GroupIds [JsonProperty(\"GroupIDs\")] public List<object>? GroupIds { get; set; } Property Value List<object> HomeAddress [JsonProperty(\"HomeAddress\")] public string? HomeAddress { get; set; } Property Value string HomeCity [JsonProperty(\"HomeCity\")] public string? HomeCity { get; set; } Property Value string HomeCountry [JsonProperty(\"HomeCountry\")] public string? HomeCountry { get; set; } Property Value string HomePhone [JsonProperty(\"HomePhone\")] public string? HomePhone { get; set; } Property Value string HomeState [JsonProperty(\"HomeState\")] public string? HomeState { get; set; } Property Value string HomeZip [JsonProperty(\"HomeZip\")] public string? HomeZip { get; set; } Property Value string ImHandle [JsonProperty(\"IMHandle\")] public string? ImHandle { get; set; } Property Value string ImProvider [JsonProperty(\"IMProvider\")] public string? ImProvider { get; set; } Property Value string IsActive [JsonProperty(\"IsActive\")] public bool IsActive { get; set; } Property Value bool IsCapacityManaged [JsonProperty(\"IsCapacityManaged\")] public bool IsCapacityManaged { get; set; } Property Value bool IsConfidential [JsonProperty(\"IsConfidential\")] public bool IsConfidential { get; set; } Property Value bool IsEmployee [JsonProperty(\"IsEmployee\")] public bool IsEmployee { get; set; } Property Value bool LastName [JsonProperty(\"LastName\")] public string? LastName { get; set; } Property Value string LocationID [JsonProperty(\"LocationID\")] public int LocationID { get; set; } Property Value int LocationName [JsonProperty(\"LocationName\")] public object? LocationName { get; set; } Property Value object LocationRoomID [JsonProperty(\"LocationRoomID\")] public int LocationRoomID { get; set; } Property Value int LocationRoomName [JsonProperty(\"LocationRoomName\")] public object? LocationRoomName { get; set; } Property Value object MiddleName [JsonProperty(\"MiddleName\")] public string? MiddleName { get; set; } Property Value string MobilePhone [JsonProperty(\"MobilePhone\")] public string? MobilePhone { get; set; } Property Value string Nickname [JsonProperty(\"Nickname\")] public string? Nickname { get; set; } Property Value string OrgApplications [JsonProperty(\"OrgApplications\")] public object? OrgApplications { get; set; } Property Value object OtherPhone [JsonProperty(\"OtherPhone\")] public string? OtherPhone { get; set; } Property Value string Pager [JsonProperty(\"Pager\")] public string? Pager { get; set; } Property Value string Permissions [JsonProperty(\"Permissions\")] public List<object>? Permissions { get; set; } Property Value List<object> PrimaryClientPortalApplicationId [JsonProperty(\"PrimaryClientPortalApplicationID\")] public object? PrimaryClientPortalApplicationId { get; set; } Property Value object PrimaryEmail [JsonProperty(\"PrimaryEmail\")] public string? PrimaryEmail { get; set; } Property Value string PrimaryPhone [JsonProperty(\"PrimaryPhone\")] public string? PrimaryPhone { get; set; } Property Value string ProfileImageFileName [JsonProperty(\"ProfileImageFileName\")] public string? ProfileImageFileName { get; set; } Property Value string ReferenceId [JsonProperty(\"ReferenceID\")] public int ReferenceId { get; set; } Property Value int ReportTimeAfterDate [JsonProperty(\"ReportTimeAfterDate\")] public DateTime ReportTimeAfterDate { get; set; } Property Value DateTime ReportsToFullName [JsonProperty(\"ReportsToFullName\")] public string? ReportsToFullName { get; set; } Property Value string ReportsToUid [JsonProperty(\"ReportsToUID\")] public string? ReportsToUid { get; set; } Property Value string ResourcePoolId [JsonProperty(\"ResourcePoolID\")] public int ResourcePoolId { get; set; } Property Value int ResourcePoolName [JsonProperty(\"ResourcePoolName\")] public string? ResourcePoolName { get; set; } Property Value string Salutation [JsonProperty(\"Salutation\")] public string? Salutation { get; set; } Property Value string SecurityRoleId [JsonProperty(\"SecurityRoleID\")] public string? SecurityRoleId { get; set; } Property Value string SecurityRoleName [JsonProperty(\"SecurityRoleName\")] public string? SecurityRoleName { get; set; } Property Value string ShouldReportTime [JsonProperty(\"ShouldReportTime\")] public bool ShouldReportTime { get; set; } Property Value bool TechnicianSignature [JsonProperty(\"TechnicianSignature\")] public object? TechnicianSignature { get; set; } Property Value object Title [JsonProperty(\"Title\")] public string? Title { get; set; } Property Value string TypeId [JsonProperty(\"TypeID\")] public int TypeId { get; set; } Property Value int TzName [JsonProperty(\"TZName\")] public string? TzName { get; set; } Property Value string Tzid [JsonProperty(\"TZID\")] public int Tzid { get; set; } Property Value int Uid [JsonProperty(\"UID\")] public string? Uid { get; set; } Property Value string UserName [JsonProperty(\"UserName\")] public string? UserName { get; set; } Property Value string WorkAddress [JsonProperty(\"WorkAddress\")] public string? WorkAddress { get; set; } Property Value string WorkCity [JsonProperty(\"WorkCity\")] public string? WorkCity { get; set; } Property Value string WorkCountry [JsonProperty(\"WorkCountry\")] public string? WorkCountry { get; set; } Property Value string WorkPhone [JsonProperty(\"WorkPhone\")] public string? WorkPhone { get; set; } Property Value string WorkState [JsonProperty(\"WorkState\")] public string? WorkState { get; set; } Property Value string WorkZip [JsonProperty(\"WorkZip\")] public string? WorkZip { get; set; } Property Value string WorkableHours [JsonProperty(\"WorkableHours\")] public double WorkableHours { get; set; } Property Value double"
  },
  "api/Itsm.Tdx.WebApi.People.Models.html": {
    "href": "api/Itsm.Tdx.WebApi.People.Models.html",
    "title": "Namespace Itsm.Tdx.WebApi.People.Models | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.People.Models Classes User"
  },
  "api/Itsm.Tdx.WebApi.People.PeopleRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.People.PeopleRequestBuilder.html",
    "title": "Class PeopleRequestBuilder | TdxWebApiDocs",
    "summary": "Class PeopleRequestBuilder Namespace Itsm.Tdx.WebApi.People Assembly Itsm.Tdx.WebApi.dll Provides methods for interacting with people in the TeamDynamix system. This includes searching for people or retrieving them by UID. public class PeopleRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder PeopleRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PeopleRequestBuilder(TdxBaseClient) Initializes a new instance of the PeopleRequestBuilder class. public PeopleRequestBuilder(TdxBaseClient client) Parameters client TdxBaseClient The base TDX API client used for sending requests. Properties this[string] Gets a request builder to access a specific person by their UID. public PersonByIdRequestBuilder this[string uid] { get; } Parameters uid string The UID of the person to retrieve. Property Value PersonByIdRequestBuilder A PersonByIdRequestBuilder for the specified person. Search Gets a request builder used to search for people using various filters. public PersonSearchRequestBuilder Search { get; } Property Value PersonSearchRequestBuilder"
  },
  "api/Itsm.Tdx.WebApi.People.PersonByIdRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.People.PersonByIdRequestBuilder.html",
    "title": "Class PersonByIdRequestBuilder | TdxWebApiDocs",
    "summary": "Class PersonByIdRequestBuilder Namespace Itsm.Tdx.WebApi.People Assembly Itsm.Tdx.WebApi.dll Provides functionality to retrieve a person by their unique identifier (UID) from the TeamDynamix people database. public class PersonByIdRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder PersonByIdRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PersonByIdRequestBuilder(string, TdxBaseClient) Initializes a new instance of the PersonByIdRequestBuilder class. public PersonByIdRequestBuilder(string path, TdxBaseClient client) Parameters path string The relative API path to the specific person. client TdxBaseClient The TDX API client used to send the request. Methods GetAsync() Sends a GET request to retrieve the person identified by the specified UID. public Task<User> GetAsync() Returns Task<User> A User object representing the person."
  },
  "api/Itsm.Tdx.WebApi.People.PersonLookupRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.People.PersonLookupRequestBuilder.html",
    "title": "Class PersonLookupRequestBuilder | TdxWebApiDocs",
    "summary": "Class PersonLookupRequestBuilder Namespace Itsm.Tdx.WebApi.People Assembly Itsm.Tdx.WebApi.dll public class PersonLookupRequestBuilder Inheritance object PersonLookupRequestBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Itsm.Tdx.WebApi.People.PersonSearchRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.People.PersonSearchRequestBuilder.html",
    "title": "Class PersonSearchRequestBuilder | TdxWebApiDocs",
    "summary": "Class PersonSearchRequestBuilder Namespace Itsm.Tdx.WebApi.People Assembly Itsm.Tdx.WebApi.dll Provides functionality to search for people in the TeamDynamix people database based on various search criteria. public class PersonSearchRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder PersonSearchRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PersonSearchRequestBuilder(string, TdxBaseClient) Initializes a new instance of the PersonSearchRequestBuilder class. public PersonSearchRequestBuilder(string path, TdxBaseClient client) Parameters path string The relative API path for the search endpoint. client TdxBaseClient The TDX API client used to send the request. Methods GetAsync() Executes the search with the provided criteria and returns a list of matching users. public Task<List<User>> GetAsync() Returns Task<List<User>> A list of User objects that match the search criteria. Exceptions InvalidOperationException Thrown when no search criteria have been provided. UserException Thrown when no matching users are found. With(string, string) Adds a custom search criterion to the search criteria. public PersonSearchRequestBuilder With(string key, string value) Parameters key string The key of the search criterion. value string The value of the search criterion. Returns PersonSearchRequestBuilder The current PersonSearchRequestBuilder instance. Exceptions ArgumentException Thrown when key or value is null or empty. WithEmail(string) Adds the email to the search criteria. public PersonSearchRequestBuilder WithEmail(string email) Parameters email string The email address of the person. Returns PersonSearchRequestBuilder The current PersonSearchRequestBuilder instance. WithExternalId(string) Adds the external ID to the search criteria. public PersonSearchRequestBuilder WithExternalId(string externalId) Parameters externalId string The external ID of the person. Returns PersonSearchRequestBuilder The current PersonSearchRequestBuilder instance. Exceptions ArgumentException Thrown when externalId is null or empty. WithFirstName(string) Adds the first name to the search criteria. public PersonSearchRequestBuilder WithFirstName(string firstName) Parameters firstName string The first name of the person. Returns PersonSearchRequestBuilder The current PersonSearchRequestBuilder instance. WithLastName(string) Adds the last name to the search criteria. public PersonSearchRequestBuilder WithLastName(string lastName) Parameters lastName string The last name of the person. Returns PersonSearchRequestBuilder The current PersonSearchRequestBuilder instance. WithUsername(string) Adds the username to the search criteria. public PersonSearchRequestBuilder WithUsername(string username) Parameters username string The username of the person. Returns PersonSearchRequestBuilder The current PersonSearchRequestBuilder instance. Exceptions ArgumentException Thrown when username is null or empty."
  },
  "api/Itsm.Tdx.WebApi.People.html": {
    "href": "api/Itsm.Tdx.WebApi.People.html",
    "title": "Namespace Itsm.Tdx.WebApi.People | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.People Classes PeopleRequestBuilder Provides methods for interacting with people in the TeamDynamix system. This includes searching for people or retrieving them by UID. PersonByIdRequestBuilder Provides functionality to retrieve a person by their unique identifier (UID) from the TeamDynamix people database. PersonLookupRequestBuilder PersonSearchRequestBuilder Provides functionality to search for people in the TeamDynamix people database based on various search criteria."
  },
  "api/Itsm.Tdx.WebApi.TdxBaseClient.html": {
    "href": "api/Itsm.Tdx.WebApi.TdxBaseClient.html",
    "title": "Class TdxBaseClient | TdxWebApiDocs",
    "summary": "Class TdxBaseClient Namespace Itsm.Tdx.WebApi Assembly Itsm.Tdx.WebApi.dll public abstract class TdxBaseClient Inheritance object TdxBaseClient Derived TdxClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TdxBaseClient(HttpClient, TdxClientOptions?) protected TdxBaseClient(HttpClient httpClient, TdxClientOptions? options) Parameters httpClient HttpClient options TdxClientOptions TdxBaseClient(HttpClient, string, TdxClientOptions?) protected TdxBaseClient(HttpClient httpClient, string tenant, TdxClientOptions? options) Parameters httpClient HttpClient tenant string options TdxClientOptions Fields HttpClient protected readonly HttpClient HttpClient Field Value HttpClient RetryPolicy protected readonly AsyncRetryPolicy<HttpResponseMessage> RetryPolicy Field Value AsyncRetryPolicy<HttpResponseMessage> TdxClientOptions protected readonly TdxClientOptions TdxClientOptions Field Value TdxClientOptions Token protected string? Token Field Value string Methods AddAuthorization(HttpRequestMessage) protected void AddAuthorization(HttpRequestMessage request) Parameters request HttpRequestMessage BuildBaseUri(string, TdxClientOptions) protected static Uri BuildBaseUri(string tenant, TdxClientOptions options) Parameters tenant string options TdxClientOptions Returns Uri CreateRetryPolicy(TdxClientOptions) protected static AsyncRetryPolicy<HttpResponseMessage> CreateRetryPolicy(TdxClientOptions clientOptions) Parameters clientOptions TdxClientOptions Returns AsyncRetryPolicy<HttpResponseMessage> SendRequestAsync(HttpRequestMessage) public Task<HttpResponseMessage> SendRequestAsync(HttpRequestMessage request) Parameters request HttpRequestMessage Returns Task<HttpResponseMessage> SendRequestAsync<T>(HttpRequestMessage) public Task<T> SendRequestAsync<T>(HttpRequestMessage request) Parameters request HttpRequestMessage Returns Task<T> Type Parameters T SetToken(string) public void SetToken(string token) Parameters token string"
  },
  "api/Itsm.Tdx.WebApi.TdxClient.html": {
    "href": "api/Itsm.Tdx.WebApi.TdxClient.html",
    "title": "Class TdxClient | TdxWebApiDocs",
    "summary": "Class TdxClient Namespace Itsm.Tdx.WebApi Assembly Itsm.Tdx.WebApi.dll public class TdxClient : TdxBaseClient Inheritance object TdxBaseClient TdxClient Inherited Members TdxBaseClient.HttpClient TdxBaseClient.RetryPolicy TdxBaseClient.TdxClientOptions TdxBaseClient.Token TdxBaseClient.BuildBaseUri(string, TdxClientOptions) TdxBaseClient.CreateRetryPolicy(TdxClientOptions) TdxBaseClient.SetToken(string) TdxBaseClient.AddAuthorization(HttpRequestMessage) TdxBaseClient.SendRequestAsync(HttpRequestMessage) TdxBaseClient.SendRequestAsync<T>(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TdxClient(HttpClient, string, string, string, TdxClientOptions?) Use this constructor to supply your own HttpClient instance, such as one configured with logging, handlers, or a shared retry policy. If BaseAddress is not set, it will be inferred from the tenant and options. public TdxClient(HttpClient httpClient, string tenant, string webServicesBeId, string webServicesKey, TdxClientOptions? options = null) Parameters httpClient HttpClient tenant string webServicesBeId string webServicesKey string options TdxClientOptions TdxClient(string, string, string) Constructor with default retry policy and no throttling callbacks. public TdxClient(string tenant, string webServicesBeId, string webServicesKey) Parameters tenant string webServicesBeId string webServicesKey string TdxClient(string, string, string, TdxClientOptions) Constructor that takes full configuration via TdxClientOptions. public TdxClient(string tenant, string webServicesBeId, string webServicesKey, TdxClientOptions options) Parameters tenant string webServicesBeId string webServicesKey string options TdxClientOptions Properties Accounts public AccountsRequestBuilder Accounts { get; } Property Value AccountsRequestBuilder People public PeopleRequestBuilder People { get; } Property Value PeopleRequestBuilder Methods AuthenticateAsync() public Task AuthenticateAsync() Returns Task Tickets(string) public TicketsRequestBuilder Tickets(string appId) Parameters appId string Returns TicketsRequestBuilder"
  },
  "api/Itsm.Tdx.WebApi.TdxClientFactory.html": {
    "href": "api/Itsm.Tdx.WebApi.TdxClientFactory.html",
    "title": "Class TdxClientFactory | TdxWebApiDocs",
    "summary": "Class TdxClientFactory Namespace Itsm.Tdx.WebApi Assembly Itsm.Tdx.WebApi.dll Factory for creating HttpClient instances with advanced control over message handlers. Consumers can: Create any number of custom DelegatingHandler instances (e.g., logging, authentication, retry, telemetry). Pass them as a collection to the factory method. The factory chains these handlers together and builds an HttpClient instance that executes all handlers in the specified order. public static class TdxClientFactory Inheritance object TdxClientFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Use this factory when you need to customize the HttpClient pipeline, such as adding custom logging, authentication, or retry policies. This enables flexible, reusable, and testable HTTP communication. Methods CreateHttpClient(IEnumerable<DelegatingHandler>, string, HttpMessageHandler?) public static HttpClient CreateHttpClient(IEnumerable<DelegatingHandler> handlers, string tenantOrUrl, HttpMessageHandler? rootHandler = null) Parameters handlers IEnumerable<DelegatingHandler> tenantOrUrl string rootHandler HttpMessageHandler Returns HttpClient"
  },
  "api/Itsm.Tdx.WebApi.Tickets.Models.Notify.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Models.Notify.html",
    "title": "Class Notify | TdxWebApiDocs",
    "summary": "Class Notify Namespace Itsm.Tdx.WebApi.Tickets.Models Assembly Itsm.Tdx.WebApi.dll public class Notify Inheritance object Notify Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GroupId public string? GroupId { get; set; } Property Value string Initials public string? Initials { get; set; } Property Value string ItemRole public string? ItemRole { get; set; } Property Value string Name public string? Name { get; set; } Property Value string ProfileImageFileName public string? ProfileImageFileName { get; set; } Property Value string RefValue public string? RefValue { get; set; } Property Value string Value public string? Value { get; set; } Property Value string"
  },
  "api/Itsm.Tdx.WebApi.Tickets.Models.Ticket.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Models.Ticket.html",
    "title": "Class Ticket | TdxWebApiDocs",
    "summary": "Class Ticket Namespace Itsm.Tdx.WebApi.Tickets.Models Assembly Itsm.Tdx.WebApi.dll public class Ticket Inheritance object Ticket Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccountID [JsonPropertyName(\"AccountID\")] public int? AccountID { get; set; } Property Value int? AccountName [JsonPropertyName(\"AccountName\")] public string? AccountName { get; set; } Property Value string ActualMinutes [JsonPropertyName(\"ActualMinutes\")] public int? ActualMinutes { get; set; } Property Value int? AppID [JsonPropertyName(\"AppID\")] public int? AppID { get; set; } Property Value int? ArticleAppID [JsonPropertyName(\"ArticleAppID\")] public int? ArticleAppID { get; set; } Property Value int? ArticleCategoryPathNames [JsonPropertyName(\"ArticleCategoryPathNames\")] public string? ArticleCategoryPathNames { get; set; } Property Value string ArticleID [JsonPropertyName(\"ArticleID\")] public int? ArticleID { get; set; } Property Value int? ArticleShortcutID [JsonPropertyName(\"ArticleShortcutID\")] public object? ArticleShortcutID { get; set; } Property Value object ArticleStatus [JsonPropertyName(\"ArticleStatus\")] public int? ArticleStatus { get; set; } Property Value int? ArticleSubject [JsonPropertyName(\"ArticleSubject\")] public string? ArticleSubject { get; set; } Property Value string Attachments [JsonPropertyName(\"Attachments\")] public List<object>? Attachments { get; set; } Property Value List<object> Attributes [JsonPropertyName(\"Attributes\")] public List<object>? Attributes { get; set; } Property Value List<object> Classification [JsonPropertyName(\"Classification\")] public int? Classification { get; set; } Property Value int? ClassificationName [JsonPropertyName(\"ClassificationName\")] public string? ClassificationName { get; set; } Property Value string CompletedDate [JsonPropertyName(\"CompletedDate\")] public DateTime? CompletedDate { get; set; } Property Value DateTime? CompletedFullName [JsonPropertyName(\"CompletedFullName\")] public string? CompletedFullName { get; set; } Property Value string CompletedUid [JsonPropertyName(\"CompletedUid\")] public string? CompletedUid { get; set; } Property Value string ConvertedToTaskDate [JsonPropertyName(\"ConvertedToTaskDate\")] public DateTime? ConvertedToTaskDate { get; set; } Property Value DateTime? ConvertedToTaskFullName [JsonPropertyName(\"ConvertedToTaskFullName\")] public string? ConvertedToTaskFullName { get; set; } Property Value string ConvertedToTaskUid [JsonPropertyName(\"ConvertedToTaskUid\")] public object? ConvertedToTaskUid { get; set; } Property Value object CreatedDate [JsonPropertyName(\"CreatedDate\")] public DateTime? CreatedDate { get; set; } Property Value DateTime? CreatedEmail [JsonPropertyName(\"CreatedEmail\")] public string? CreatedEmail { get; set; } Property Value string CreatedFullName [JsonPropertyName(\"CreatedFullName\")] public string? CreatedFullName { get; set; } Property Value string CreatedUid [JsonPropertyName(\"CreatedUid\")] public string? CreatedUid { get; set; } Property Value string DaysOld [JsonPropertyName(\"DaysOld\")] public int? DaysOld { get; set; } Property Value int? Description [JsonPropertyName(\"Description\")] public string? Description { get; set; } Property Value string EndDate [JsonPropertyName(\"EndDate\")] public object? EndDate { get; set; } Property Value object EstimatedMinutes [JsonPropertyName(\"EstimatedMinutes\")] public int? EstimatedMinutes { get; set; } Property Value int? ExpensesBudget [JsonPropertyName(\"ExpensesBudget\")] public double? ExpensesBudget { get; set; } Property Value double? ExpensesBudgetUsed [JsonPropertyName(\"ExpensesBudgetUsed\")] public double? ExpensesBudgetUsed { get; set; } Property Value double? FormID [JsonPropertyName(\"FormID\")] public int? FormID { get; set; } Property Value int? FormName [JsonPropertyName(\"FormName\")] public string? FormName { get; set; } Property Value string GoesOffHoldDate [JsonPropertyName(\"GoesOffHoldDate\")] public DateTime? GoesOffHoldDate { get; set; } Property Value DateTime? ID [JsonPropertyName(\"ID\")] public int? ID { get; set; } Property Value int? ImpactID [JsonPropertyName(\"ImpactID\")] public int? ImpactID { get; set; } Property Value int? ImpactName [JsonPropertyName(\"ImpactName\")] public string? ImpactName { get; set; } Property Value string IsConvertedToTask [JsonPropertyName(\"IsConvertedToTask\")] public bool? IsConvertedToTask { get; set; } Property Value bool? IsOnHold [JsonPropertyName(\"IsOnHold\")] public bool? IsOnHold { get; set; } Property Value bool? IsRichHtml [JsonPropertyName(\"IsRichHtml\")] public bool? IsRichHtml { get; set; } Property Value bool? IsSlaResolveByViolated [JsonPropertyName(\"IsSlaResolveByViolated\")] public bool? IsSlaResolveByViolated { get; set; } Property Value bool? IsSlaRespondByViolated [JsonPropertyName(\"IsSlaRespondByViolated\")] public bool? IsSlaRespondByViolated { get; set; } Property Value bool? IsSlaViolated [JsonPropertyName(\"IsSlaViolated\")] public bool? IsSlaViolated { get; set; } Property Value bool? LocationID [JsonPropertyName(\"LocationID\")] public int? LocationID { get; set; } Property Value int? LocationName [JsonPropertyName(\"LocationName\")] public string? LocationName { get; set; } Property Value string LocationRoomID [JsonPropertyName(\"LocationRoomID\")] public int? LocationRoomID { get; set; } Property Value int? LocationRoomName [JsonPropertyName(\"LocationRoomName\")] public string? LocationRoomName { get; set; } Property Value string ModifiedDate [JsonPropertyName(\"ModifiedDate\")] public DateTime? ModifiedDate { get; set; } Property Value DateTime? ModifiedFullName [JsonPropertyName(\"ModifiedFullName\")] public string? ModifiedFullName { get; set; } Property Value string ModifiedUid [JsonPropertyName(\"ModifiedUid\")] public string? ModifiedUid { get; set; } Property Value string Notify [JsonPropertyName(\"Notify\")] public List<Notify>? Notify { get; set; } Property Value List<Notify> ParentClass [JsonPropertyName(\"ParentClass\")] public int? ParentClass { get; set; } Property Value int? ParentID [JsonPropertyName(\"ParentID\")] public int? ParentID { get; set; } Property Value int? ParentTitle [JsonPropertyName(\"ParentTitle\")] public string? ParentTitle { get; set; } Property Value string PlacedOnHoldDate [JsonPropertyName(\"PlacedOnHoldDate\")] public DateTime? PlacedOnHoldDate { get; set; } Property Value DateTime? PriorityID [JsonPropertyName(\"PriorityID\")] public int? PriorityID { get; set; } Property Value int? PriorityName [JsonPropertyName(\"PriorityName\")] public string? PriorityName { get; set; } Property Value string PriorityOrder [JsonPropertyName(\"PriorityOrder\")] public double? PriorityOrder { get; set; } Property Value double? RefCode [JsonPropertyName(\"RefCode\")] public string? RefCode { get; set; } Property Value string RequestorEmail [JsonPropertyName(\"RequestorEmail\")] public string? RequestorEmail { get; set; } Property Value string RequestorFirstName [JsonPropertyName(\"RequestorFirstName\")] public string? RequestorFirstName { get; set; } Property Value string RequestorLastName [JsonPropertyName(\"RequestorLastName\")] public string? RequestorLastName { get; set; } Property Value string RequestorName [JsonPropertyName(\"RequestorName\")] public string? RequestorName { get; set; } Property Value string RequestorPhone [JsonPropertyName(\"RequestorPhone\")] public string? RequestorPhone { get; set; } Property Value string RequestorUid [JsonPropertyName(\"RequestorUid\")] public string? RequestorUid { get; set; } Property Value string ResolveByDate [JsonPropertyName(\"ResolveByDate\")] public DateTime? ResolveByDate { get; set; } Property Value DateTime? RespondByDate [JsonPropertyName(\"RespondByDate\")] public DateTime? RespondByDate { get; set; } Property Value DateTime? RespondedDate [JsonPropertyName(\"RespondedDate\")] public DateTime? RespondedDate { get; set; } Property Value DateTime? RespondedFullName [JsonPropertyName(\"RespondedFullName\")] public string? RespondedFullName { get; set; } Property Value string RespondedUid [JsonPropertyName(\"RespondedUid\")] public object? RespondedUid { get; set; } Property Value object ResponsibleEmail [JsonPropertyName(\"ResponsibleEmail\")] public string? ResponsibleEmail { get; set; } Property Value string ResponsibleFullName [JsonPropertyName(\"ResponsibleFullName\")] public string? ResponsibleFullName { get; set; } Property Value string ResponsibleGroupID [JsonPropertyName(\"ResponsibleGroupID\")] public int? ResponsibleGroupID { get; set; } Property Value int? ResponsibleGroupName [JsonPropertyName(\"ResponsibleGroupName\")] public string? ResponsibleGroupName { get; set; } Property Value string ResponsibleUid [JsonPropertyName(\"ResponsibleUid\")] public string? ResponsibleUid { get; set; } Property Value string ReviewerEmail [JsonPropertyName(\"ReviewerEmail\")] public string? ReviewerEmail { get; set; } Property Value string ReviewerFullName [JsonPropertyName(\"ReviewerFullName\")] public string? ReviewerFullName { get; set; } Property Value string ReviewerUid [JsonPropertyName(\"ReviewerUid\")] public object? ReviewerUid { get; set; } Property Value object ReviewingGroupID [JsonPropertyName(\"ReviewingGroupID\")] public int? ReviewingGroupID { get; set; } Property Value int? ReviewingGroupName [JsonPropertyName(\"ReviewingGroupName\")] public string? ReviewingGroupName { get; set; } Property Value string ServiceCategoryID [JsonPropertyName(\"ServiceCategoryID\")] public int? ServiceCategoryID { get; set; } Property Value int? ServiceCategoryName [JsonPropertyName(\"ServiceCategoryName\")] public string? ServiceCategoryName { get; set; } Property Value string ServiceID [JsonPropertyName(\"ServiceID\")] public int? ServiceID { get; set; } Property Value int? ServiceName [JsonPropertyName(\"ServiceName\")] public string? ServiceName { get; set; } Property Value string ServiceOfferingID [JsonPropertyName(\"ServiceOfferingID\")] public int? ServiceOfferingID { get; set; } Property Value int? ServiceOfferingName [JsonPropertyName(\"ServiceOfferingName\")] public string? ServiceOfferingName { get; set; } Property Value string SlaBeginDate [JsonPropertyName(\"SlaBeginDate\")] public DateTime? SlaBeginDate { get; set; } Property Value DateTime? SlaID [JsonPropertyName(\"SlaID\")] public int? SlaID { get; set; } Property Value int? SlaName [JsonPropertyName(\"SlaName\")] public string? SlaName { get; set; } Property Value string SourceID [JsonPropertyName(\"SourceID\")] public int? SourceID { get; set; } Property Value int? SourceName [JsonPropertyName(\"SourceName\")] public string? SourceName { get; set; } Property Value string StartDate [JsonPropertyName(\"StartDate\")] public object? StartDate { get; set; } Property Value object StatusClass [JsonPropertyName(\"StatusClass\")] public int? StatusClass { get; set; } Property Value int? StatusID [JsonPropertyName(\"StatusID\")] public int? StatusID { get; set; } Property Value int? StatusName [JsonPropertyName(\"StatusName\")] public string? StatusName { get; set; } Property Value string TaskEndDate [JsonPropertyName(\"TaskEndDate\")] public DateTime? TaskEndDate { get; set; } Property Value DateTime? TaskID [JsonPropertyName(\"TaskID\")] public int? TaskID { get; set; } Property Value int? TaskPercentComplete [JsonPropertyName(\"TaskPercentComplete\")] public int? TaskPercentComplete { get; set; } Property Value int? TaskPlanID [JsonPropertyName(\"TaskPlanID\")] public int? TaskPlanID { get; set; } Property Value int? TaskPlanName [JsonPropertyName(\"TaskPlanName\")] public string? TaskPlanName { get; set; } Property Value string TaskProjectID [JsonPropertyName(\"TaskProjectID\")] public int? TaskProjectID { get; set; } Property Value int? TaskProjectName [JsonPropertyName(\"TaskProjectName\")] public string? TaskProjectName { get; set; } Property Value string TaskStartDate [JsonPropertyName(\"TaskStartDate\")] public DateTime? TaskStartDate { get; set; } Property Value DateTime? TaskTitle [JsonPropertyName(\"TaskTitle\")] public string? TaskTitle { get; set; } Property Value string Tasks [JsonPropertyName(\"Tasks\")] public List<object>? Tasks { get; set; } Property Value List<object> TimeBudget [JsonPropertyName(\"TimeBudget\")] public double? TimeBudget { get; set; } Property Value double? TimeBudgetUsed [JsonPropertyName(\"TimeBudgetUsed\")] public double? TimeBudgetUsed { get; set; } Property Value double? Title [JsonPropertyName(\"Title\")] public string? Title { get; set; } Property Value string TypeCategoryID [JsonPropertyName(\"TypeCategoryID\")] public int? TypeCategoryID { get; set; } Property Value int? TypeCategoryName [JsonPropertyName(\"TypeCategoryName\")] public string? TypeCategoryName { get; set; } Property Value string TypeID [JsonPropertyName(\"TypeID\")] public int? TypeID { get; set; } Property Value int? TypeName [JsonPropertyName(\"TypeName\")] public string? TypeName { get; set; } Property Value string UrgencyID [JsonPropertyName(\"UrgencyID\")] public int? UrgencyID { get; set; } Property Value int? UrgencyName [JsonPropertyName(\"UrgencyName\")] public string? UrgencyName { get; set; } Property Value string Uri [JsonPropertyName(\"Uri\")] public string? Uri { get; set; } Property Value string WorkflowConfigurationID [JsonPropertyName(\"WorkflowConfigurationID\")] public int? WorkflowConfigurationID { get; set; } Property Value int? WorkflowID [JsonPropertyName(\"WorkflowID\")] public int? WorkflowID { get; set; } Property Value int? WorkflowName [JsonPropertyName(\"WorkflowName\")] public string? WorkflowName { get; set; } Property Value string"
  },
  "api/Itsm.Tdx.WebApi.Tickets.Models.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Models.html",
    "title": "Namespace Itsm.Tdx.WebApi.Tickets.Models | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Tickets.Models Classes Notify Ticket"
  },
  "api/Itsm.Tdx.WebApi.Tickets.Options.TicketCreateOptions.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Options.TicketCreateOptions.html",
    "title": "Class TicketCreateOptions | TdxWebApiDocs",
    "summary": "Class TicketCreateOptions Namespace Itsm.Tdx.WebApi.Tickets.Options Assembly Itsm.Tdx.WebApi.dll Represents optional parameters that can be applied when creating a ticket via the TeamDynamix API. These options are serialized into query string parameters. public class TicketCreateOptions Inheritance object TicketCreateOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowRequestorCreation Gets or sets a value indicating whether to allow creation of the requestor if they do not already exist. public bool AllowRequestorCreation { get; set; } Property Value bool ApplyDefaults Gets or sets a value indicating whether to apply default values to the ticket. public bool ApplyDefaults { get; set; } Property Value bool EnableNotifyReviewer Gets or sets a value indicating whether to enable notifications to the reviewer. public bool EnableNotifyReviewer { get; set; } Property Value bool NotifyRequestor Gets or sets a value indicating whether to notify the requestor. public bool NotifyRequestor { get; set; } Property Value bool NotifyResponsible Gets or sets a value indicating whether to notify the person responsible for the ticket. public bool NotifyResponsible { get; set; } Property Value bool PreferRequestorAccountAndPriority Gets or sets a value indicating whether to prefer the requestor's account and priority over defaults. public bool PreferRequestorAccountAndPriority { get; set; } Property Value bool Methods ToQueryString() Converts the current options to a URL query string suitable for appending to an HTTP request. public string ToQueryString() Returns string A query string representation of the ticket creation options."
  },
  "api/Itsm.Tdx.WebApi.Tickets.Options.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Options.html",
    "title": "Namespace Itsm.Tdx.WebApi.Tickets.Options | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Tickets.Options Classes TicketCreateOptions Represents optional parameters that can be applied when creating a ticket via the TeamDynamix API. These options are serialized into query string parameters."
  },
  "api/Itsm.Tdx.WebApi.Tickets.TicketCreateObjectRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.TicketCreateObjectRequestBuilder.html",
    "title": "Class TicketCreateObjectRequestBuilder | TdxWebApiDocs",
    "summary": "Class TicketCreateObjectRequestBuilder Namespace Itsm.Tdx.WebApi.Tickets Assembly Itsm.Tdx.WebApi.dll Provides a builder for creating tickets using a fully constructed Ticket object. public class TicketCreateObjectRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder TicketCreateObjectRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TicketCreateObjectRequestBuilder(string, TdxBaseClient, Ticket) Initializes a new instance of the TicketCreateObjectRequestBuilder class. public TicketCreateObjectRequestBuilder(string path, TdxBaseClient client, Ticket ticket) Parameters path string The API endpoint path. client TdxBaseClient The client used to send the request. ticket Ticket The ticket to be created. Methods PostAsync() Submits the ticket creation request and returns the created Ticket. public Task<Ticket> PostAsync() Returns Task<Ticket> WithOptions(Action<TicketCreateOptions>) Configures additional query parameters for the creation request. public TicketCreateObjectRequestBuilder WithOptions(Action<TicketCreateOptions> configure) Parameters configure Action<TicketCreateOptions> An action to configure TicketCreateOptions. Returns TicketCreateObjectRequestBuilder"
  },
  "api/Itsm.Tdx.WebApi.Tickets.TicketCreateRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.TicketCreateRequestBuilder.html",
    "title": "Class TicketCreateRequestBuilder | TdxWebApiDocs",
    "summary": "Class TicketCreateRequestBuilder Namespace Itsm.Tdx.WebApi.Tickets Assembly Itsm.Tdx.WebApi.dll Provides a fluent interface for constructing and submitting a new ticket using discrete fields. public class TicketCreateRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder TicketCreateRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TicketCreateRequestBuilder(string, TdxBaseClient) Initializes a new instance of the TicketCreateRequestBuilder class. public TicketCreateRequestBuilder(string path, TdxBaseClient client) Parameters path string The base path for the ticket creation API endpoint. client TdxBaseClient The API client used to make requests. Methods PostAsync() Submits the ticket creation request and returns the created Ticket. public Task<Ticket> PostAsync() Returns Task<Ticket> ValidateRequiredFields() Validates that all required fields for ticket creation are present. public void ValidateRequiredFields() Exceptions InvalidOperationException Thrown when a required field is missing. WithAccountId(string) Sets the account ID associated with the ticket. public TicketCreateRequestBuilder WithAccountId(string accountId) Parameters accountId string Returns TicketCreateRequestBuilder WithDescription(string) Sets the description for the ticket. public TicketCreateRequestBuilder WithDescription(string description) Parameters description string Returns TicketCreateRequestBuilder WithOptions(Action<TicketCreateOptions>) Applies additional options for the ticket creation request. public TicketCreateRequestBuilder WithOptions(Action<TicketCreateOptions> configure) Parameters configure Action<TicketCreateOptions> An action to configure the TicketCreateOptions. Returns TicketCreateRequestBuilder WithPriority(string) Sets the priority ID of the ticket. public TicketCreateRequestBuilder WithPriority(string priorityId) Parameters priorityId string Returns TicketCreateRequestBuilder WithRequestor(string) Sets the UID of the requestor. public TicketCreateRequestBuilder WithRequestor(string uid) Parameters uid string Returns TicketCreateRequestBuilder WithResponsible(string) Sets the UID of the responsible person. public TicketCreateRequestBuilder WithResponsible(string uid) Parameters uid string Returns TicketCreateRequestBuilder WithStatusId(string) Sets the status ID of the ticket. public TicketCreateRequestBuilder WithStatusId(string statusID) Parameters statusID string Returns TicketCreateRequestBuilder WithTitle(string) Sets the title of the ticket. public TicketCreateRequestBuilder WithTitle(string title) Parameters title string Returns TicketCreateRequestBuilder WithTypeId(string) Sets the type ID of the ticket. public TicketCreateRequestBuilder WithTypeId(string typeId) Parameters typeId string Returns TicketCreateRequestBuilder"
  },
  "api/Itsm.Tdx.WebApi.Tickets.TicketItemRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.TicketItemRequestBuilder.html",
    "title": "Class TicketItemRequestBuilder | TdxWebApiDocs",
    "summary": "Class TicketItemRequestBuilder Namespace Itsm.Tdx.WebApi.Tickets Assembly Itsm.Tdx.WebApi.dll Provides operations to retrieve a specific ticket by ID. public class TicketItemRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder TicketItemRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TicketItemRequestBuilder(string, TdxBaseClient) Initializes a new instance of the TicketItemRequestBuilder class. public TicketItemRequestBuilder(string path, TdxBaseClient tdxBaseClient) Parameters path string The API path to the specific ticket. tdxBaseClient TdxBaseClient The client used to send requests. Methods GetAsync() Retrieves the ticket identified by the path. public Task<Ticket> GetAsync() Returns Task<Ticket> A Ticket object representing the ticket."
  },
  "api/Itsm.Tdx.WebApi.Tickets.TicketsRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.TicketsRequestBuilder.html",
    "title": "Class TicketsRequestBuilder | TdxWebApiDocs",
    "summary": "Class TicketsRequestBuilder Namespace Itsm.Tdx.WebApi.Tickets Assembly Itsm.Tdx.WebApi.dll Provides operations to manage and create tickets within a specific ticketing application in the TeamDynamix platform. public class TicketsRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder TicketsRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TicketsRequestBuilder(TdxBaseClient, string) Initializes a new instance of the TicketsRequestBuilder class. public TicketsRequestBuilder(TdxBaseClient client, string appId) Parameters client TdxBaseClient The TDX base client used to send HTTP requests. appId string The ID of the ticketing application. Exceptions ArgumentException Thrown if appId is null or empty. Properties AppId Gets the ID of the ticketing application associated with this request builder. public string AppId { get; } Property Value string this[string] Provides operations for a specific ticket by its ID. public TicketItemRequestBuilder this[string ticketId] { get; } Parameters ticketId string The ID of the ticket to manage. Property Value TicketItemRequestBuilder A TicketItemRequestBuilder for the specified ticket. Methods Create() Provides operations for creating new tickets using request parameters. public TicketCreateRequestBuilder Create() Returns TicketCreateRequestBuilder A TicketCreateRequestBuilder for ticket creation. Create(Ticket) Provides operations for creating a new ticket using a Ticket object. public TicketCreateObjectRequestBuilder Create(Ticket ticket) Parameters ticket Ticket The ticket to create. Returns TicketCreateObjectRequestBuilder A TicketCreateObjectRequestBuilder to execute the ticket creation."
  },
  "api/Itsm.Tdx.WebApi.Tickets.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.html",
    "title": "Namespace Itsm.Tdx.WebApi.Tickets | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Tickets Classes TicketCreateObjectRequestBuilder Provides a builder for creating tickets using a fully constructed Ticket object. TicketCreateRequestBuilder Provides a fluent interface for constructing and submitting a new ticket using discrete fields. TicketItemRequestBuilder Provides operations to retrieve a specific ticket by ID. TicketsRequestBuilder Provides operations to manage and create tickets within a specific ticketing application in the TeamDynamix platform."
  },
  "api/Itsm.Tdx.WebApi.html": {
    "href": "api/Itsm.Tdx.WebApi.html",
    "title": "Namespace Itsm.Tdx.WebApi | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi Classes BaseRequestBuilder TdxBaseClient TdxClient TdxClientFactory Factory for creating HttpClient instances with advanced control over message handlers. Consumers can: Create any number of custom DelegatingHandler instances (e.g., logging, authentication, retry, telemetry). Pass them as a collection to the factory method. The factory chains these handlers together and builds an HttpClient instance that executes all handlers in the specified order."
  },
  "bin/Debug/net8.0/methods.html": {
    "href": "bin/Debug/net8.0/methods.html",
    "title": "API Structure | TdxWebApiDocs",
    "summary": "API Structure APIs Accounts Contains methods for working with accounts/departments. Applications Contains methods for working with user applications. Attachments Contains methods for working with attachments. Attributes Contains methods for working with custom attributes. Auth Contains methods for authentication. Days Off Contains methods for working with days off. Feed Contains methods for working with feed entries. Groups Contains methods for working with groups within the TeamDynamix people database. Industries Contains methods for working with account/department industries. Integrations Contains methods for working with integrations. Locations Contains methods for working with locations. People Contains methods for working with users and other individuals within the TeamDynamix people database. Time Contains methods for creating, reading, updating, and deleting time entries as well as methods for getting information about time accounts and time reports (weekly timesheets). Type Categories Contains methods for managing type categories, which are used to group project and ticket types. User Management Contains methods for performing bulk operations upon users and other individuals within the TeamDynamix people database. Asset/Configuration Management Asset Searches/Reports Contains methods for working with asset saved searches in an assets/CIs application. Asset Statuses Contains methods for working with asset statuses. Assets Contains methods for working with assets. Configuration Item Searches/Reports Contains methods for working with configuration saved searches in an assets/CIs application. Configuration Item Types Contains methods for working with configuration item types. Configuration Items Contains methods for working with configuration items and their relationships. Configuration Relationship Types Contains methods for working with configuration relationship types. Contracts Contains methods for working with contracts. Maintenance Windows Contains methods for working with maintenance windows. Product Models Contains methods for working with asset product models. Product Types Contains methods for working with asset product types. Vendors Contains methods for working with asset vendors. Projects Briefcase Files Contains methods for working with briefcase files. Briefcase Folders Contains methods for working with briefcase folders. Issues Contains methods for working with issues. Links Contains methods for working with links. Plans Contains methods for working with project plans. Project Templates Contains methods for working with project templates. Project Types Contains methods for working with project types. Projects Contains methods for working with projects. Risks Contains methods for working with risks. Tasks Contains methods for working with project tasks. Reporting Reports Contains methods for working with Report Builder reports. Roles Functional Roles Contains methods for working with functional roles. Resource Pools Contains methods for working with resource pools. Security Roles Contains methods for working with security roles. Self-Service Knowledge Base Contains methods for working with Knowledge Base articles and categories. Project Requests Contains methods for working with project requests. Service Catalog Contains methods for working with the service catalog. Tickets Blackout Windows Contains methods for working with blackout windows. Impacts Contains methods for working with ticket impacts. Maintenance Activities Contains methods for working with maintenance activities. Priorities Contains methods for working with ticket priorities. Sources Contains methods for working with ticket sources. Ticket Searches/Reports Contains methods for working with ticket saved searches in a ticketing application. Ticket Statuses Contains methods for working with ticket statuses. Ticket Tasks Contains methods for working with ticket tasks. Ticket Types Contains methods for working with ticket types. Tickets Contains methods for working with tickets. Urgencies Contains methods for working with ticket urgencies."
  },
  "bin/Debug/net8.0/readme.html": {
    "href": "bin/Debug/net8.0/readme.html",
    "title": "Team Dynamix Web Api SDK | TdxWebApiDocs",
    "summary": "Team Dynamix Web Api SDK A fluent, opinionated C# SDK for interacting with the TeamDynamix Web API. ✨ Features ✅ Fluent-style request builders ✅ Strongly typed models and builders ✅ Supports both basic and complex ticket operations ✅ Extensible and customizable ✅ Designed for testability and clean layering \uD83D\uDCE6 Installation Install via NuGet: dotnet add package TdxClient Or reference the project directly in your solution: <ProjectReference Include=\"..\\TdxClient\\TdxClient.csproj\" /> \uD83D\uDD27 Setup \uD83D\uDE80 Quick Start Option 1: Minimal Setup (Not Recommended for ASP.NET Core) var client = new TdxClient( tenant: \"mytenant\", webServicesBeId: \"abc123\", webServicesKey: \"super-secret-key\" ); await client.AuthenticateAsync(); var ticket = await client.Tickets(\"244\")[\"123456\"].GetAsync(); Option 2: Recommended Setup with IHttpClientFactory In Program.cs or Startup.cs: builder.Services.AddHttpClient<TdxClient>((provider, httpClient) => { // Optional: Add custom handlers, policies, etc. }) .ConfigurePrimaryHttpMessageHandler(() => new HttpClientHandler { AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate }); Then register your config: builder.Services.AddSingleton(new TdxClientOptions { EnableThrottleCountdownLogging = true, OnThrottleWait = remaining => Console.WriteLine($\"Waiting {remaining.TotalSeconds} seconds due to rate limit...\"), OnThrottleContinue = () => Console.WriteLine(\"Continuing after wait.\") }); builder.Services.AddTransient<TdxClient>(provider => { var httpClient = provider.GetRequiredService<IHttpClientFactory>().CreateClient(nameof(TdxClient)); var options = provider.GetRequiredService<TdxClientOptions>(); return new TdxClient( httpClient, tenant: \"mytenant\", webServicesBeId: \"abc123\", webServicesKey: \"super-secret-key\", options ); }); Then inject it in your service: public class MyService { private readonly TdxClient _tdx; public MyService(TdxClient tdx) { _tdx = tdx; } public async Task RunAsync() { await _tdx.AuthenticateAsync(); var newTicket = new Ticket { Title = \"My New Ticket\", Description = \"Created via fluent API\", RequestorUid = Guid.Parse(\"...\"), StatusID = 1234, TypeID = 5678, AccountID = 9876, PriorityID = 1111 }; var created = await _tdx.Tickets(\"244\").Create(newTicket); } } Inject Your Own HttpClient With Custom DelegatingHandlers // Custom logging handler example public class LoggingHandler : DelegatingHandler { protected override async Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) { Console.WriteLine($\"Request: {request.Method} {request.RequestUri}\"); var response = await base.SendAsync(request, cancellationToken); Console.WriteLine($\"Response: {response.StatusCode}\"); return response; } } // Create a list of custom handlers var handlers = new List<DelegatingHandler> { new LoggingHandler() }; // Create HttpClient with custom handlers using the factory var httpClient = TdxClientFactory.CreateHttpClient(handlers, tenant); // Inject your HttpClient into TdxClient var client = new TdxClient(httpClient, tenant, beId, webServicesKey); // Authenticate and use await client.AuthenticateAsync(); var tickets = await client.Tickets(\"244\")[\"12345\"].GetAsync(); Advanced: Adding Multiple Handlers (Logging + Retry + Telemetry) var handlers = new List<DelegatingHandler> { new LoggingHandler(), new RetryHandler(), // Your custom retry handler if you have one new TelemetryHandler() // Your telemetry handler for metrics }; var httpClient = TdxClientFactory.CreateHttpClient(handlers, tenant); var client = new TdxClient(httpClient, tenant, beId, webServicesKey); await client.AuthenticateAsync(); // Now all requests go through the pipeline of your handlers var tickets = await client.Tickets(\"244\")[\"12345\"].GetAsync(); ⚠️ Not Recommended: Manual HttpClient Instantiation You will need to handle your own retry policies. // Use only for quick tests or console apps var httpClient = new HttpClient { BaseAddress = new Uri(\"https://your-org.teamdynamix.com/TDWebApi/api/\") }; var tdxClient = new TdxClient(httpClient, \"your-webservices-key\", \"your-beid\"); This bypasses DI scopes, Polly retry policies, DNS refresh handling, and other best practices. \uD83D\uDE80 Usage Exmaple \uD83D\uDD0D Search for a Person var results = await tdxClient.Users.Search .WithEmail(\"jdoe@yourorg.edu\") .ExecuteAsync(); \uD83D\uDCC4 Get a Ticket by ID var ticket = await tdxClient.Tickets(\"244\")[\"123456\"].GetAsync(); \uD83D\uDCDD Create a Ticket var ticketRequest = new TicketRequest { Title = \"New Hire Onboarding\", RequestorUid = \"abc-123\", Type = TicketType.OnboardingOrJobUpdate, Description = \"Provision access and equipment\", ResponsibleGroupId = \"4000\" }; var ticket = await tdxClient.Tickets(\"244\").Create(ticketRequest.MapToTicket()); \uD83D\uDCDD Create ticket cont. var ticket = await tdxClient.Tickets(\"244\").Create().WithTitle(\"...\")... // if you attempt to send without all required fields it will error our and notify you ✅ Resolve a Ticket await tdxClient.Tickets(\"244\")[\"123456\"] .SetStatus(TicketStatus.Resolved) .WithComment(\"Issue resolved by help desk.\") .UpdateAsync(); ⚙️ TdxClientOptions Customize retry/throttling behavior: var options = new TdxClientOptions { MaxRetries = 3, EnableThrottleCountdownLogging = true, OnThrottleWait = remaining => Console.WriteLine($\"Waiting {remaining.TotalSeconds}...\"), OnThrottleContinue = () => Console.WriteLine(\"Continuing.\") }; \uD83E\uDDF1 Structure TdxClient ├── People │ └── Search ├── Tickets │ ├── Create │ └── [ticketId] │ ├── Get │ ├── SetStatus │ └── AddFeedEntry \uD83D\uDCE6 Extending You can add more fluent builders by extending BaseRequestBuilder: public class AssetsRequestBuilder : BaseRequestBuilder { public AssetsRequestBuilder(TdxBaseClient client) : base(\"assets\", client) { } public Task<Asset> GetAssetAsync(string id) => SendAsync<Asset>(CreateRequest(HttpMethod.Get, id)); } \uD83E\uDDEA Testing You can mock the TdxBaseClient and HttpClient layers for unit testing. Also would recommend implementing your own httpclient purely to repoint to \uD83D\uDD10 Authentication Supports Web Services Key-based authentication. If your API uses OAuth, you’ll need to extend TdxBaseClient accordingly. \uD83D\uDCC4 License MIT \uD83D\uDE4B Support / Contribution Open an issue or submit a pull request — contributions welcome!"
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | TdxWebApiDocs",
    "summary": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | TdxWebApiDocs",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | TdxWebApiDocs",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "methods.html": {
    "href": "methods.html",
    "title": "API Structure | TdxWebApiDocs",
    "summary": "API Structure APIs Accounts Contains methods for working with accounts/departments. Applications Contains methods for working with user applications. Attachments Contains methods for working with attachments. Attributes Contains methods for working with custom attributes. Auth Contains methods for authentication. Days Off Contains methods for working with days off. Feed Contains methods for working with feed entries. Groups Contains methods for working with groups within the TeamDynamix people database. Industries Contains methods for working with account/department industries. Integrations Contains methods for working with integrations. Locations Contains methods for working with locations. People Contains methods for working with users and other individuals within the TeamDynamix people database. Time Contains methods for creating, reading, updating, and deleting time entries as well as methods for getting information about time accounts and time reports (weekly timesheets). Type Categories Contains methods for managing type categories, which are used to group project and ticket types. User Management Contains methods for performing bulk operations upon users and other individuals within the TeamDynamix people database. Asset/Configuration Management Asset Searches/Reports Contains methods for working with asset saved searches in an assets/CIs application. Asset Statuses Contains methods for working with asset statuses. Assets Contains methods for working with assets. Configuration Item Searches/Reports Contains methods for working with configuration saved searches in an assets/CIs application. Configuration Item Types Contains methods for working with configuration item types. Configuration Items Contains methods for working with configuration items and their relationships. Configuration Relationship Types Contains methods for working with configuration relationship types. Contracts Contains methods for working with contracts. Maintenance Windows Contains methods for working with maintenance windows. Product Models Contains methods for working with asset product models. Product Types Contains methods for working with asset product types. Vendors Contains methods for working with asset vendors. Projects Briefcase Files Contains methods for working with briefcase files. Briefcase Folders Contains methods for working with briefcase folders. Issues Contains methods for working with issues. Links Contains methods for working with links. Plans Contains methods for working with project plans. Project Templates Contains methods for working with project templates. Project Types Contains methods for working with project types. Projects Contains methods for working with projects. Risks Contains methods for working with risks. Tasks Contains methods for working with project tasks. Reporting Reports Contains methods for working with Report Builder reports. Roles Functional Roles Contains methods for working with functional roles. Resource Pools Contains methods for working with resource pools. Security Roles Contains methods for working with security roles. Self-Service Knowledge Base Contains methods for working with Knowledge Base articles and categories. Project Requests Contains methods for working with project requests. Service Catalog Contains methods for working with the service catalog. Tickets Blackout Windows Contains methods for working with blackout windows. Impacts Contains methods for working with ticket impacts. Maintenance Activities Contains methods for working with maintenance activities. Priorities Contains methods for working with ticket priorities. Sources Contains methods for working with ticket sources. Ticket Searches/Reports Contains methods for working with ticket saved searches in a ticketing application. Ticket Statuses Contains methods for working with ticket statuses. Ticket Tasks Contains methods for working with ticket tasks. Ticket Types Contains methods for working with ticket types. Tickets Contains methods for working with tickets. Urgencies Contains methods for working with ticket urgencies."
  },
  "readme.html": {
    "href": "readme.html",
    "title": "Team Dynamix Web Api SDK | TdxWebApiDocs",
    "summary": "Team Dynamix Web Api SDK A fluent, opinionated C# SDK for interacting with the TeamDynamix Web API. ✨ Features ✅ Fluent-style request builders ✅ Strongly typed models and builders ✅ Supports both basic and complex ticket operations ✅ Extensible and customizable ✅ Designed for testability and clean layering \uD83D\uDCE6 Installation Install via NuGet: dotnet add package TdxClient Or reference the project directly in your solution: <ProjectReference Include=\"..\\TdxClient\\TdxClient.csproj\" /> \uD83D\uDD27 Setup \uD83D\uDE80 Quick Start Option 1: Minimal Setup (Not Recommended for ASP.NET Core) var client = new TdxClient( tenant: \"mytenant\", webServicesBeId: \"abc123\", webServicesKey: \"super-secret-key\" ); await client.AuthenticateAsync(); var ticket = await client.Tickets(\"244\")[\"123456\"].GetAsync(); Option 2: Recommended Setup with IHttpClientFactory In Program.cs or Startup.cs: builder.Services.AddHttpClient<TdxClient>((provider, httpClient) => { // Optional: Add custom handlers, policies, etc. }) .ConfigurePrimaryHttpMessageHandler(() => new HttpClientHandler { AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate }); Then register your config: builder.Services.AddSingleton(new TdxClientOptions { EnableThrottleCountdownLogging = true, OnThrottleWait = remaining => Console.WriteLine($\"Waiting {remaining.TotalSeconds} seconds due to rate limit...\"), OnThrottleContinue = () => Console.WriteLine(\"Continuing after wait.\") }); builder.Services.AddTransient<TdxClient>(provider => { var httpClient = provider.GetRequiredService<IHttpClientFactory>().CreateClient(nameof(TdxClient)); var options = provider.GetRequiredService<TdxClientOptions>(); return new TdxClient( httpClient, tenant: \"mytenant\", webServicesBeId: \"abc123\", webServicesKey: \"super-secret-key\", options ); }); Then inject it in your service: public class MyService { private readonly TdxClient _tdx; public MyService(TdxClient tdx) { _tdx = tdx; } public async Task RunAsync() { await _tdx.AuthenticateAsync(); var newTicket = new Ticket { Title = \"My New Ticket\", Description = \"Created via fluent API\", RequestorUid = Guid.Parse(\"...\"), StatusID = 1234, TypeID = 5678, AccountID = 9876, PriorityID = 1111 }; var created = await _tdx.Tickets(\"244\").Create(newTicket); } } Inject Your Own HttpClient With Custom DelegatingHandlers // Custom logging handler example public class LoggingHandler : DelegatingHandler { protected override async Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) { Console.WriteLine($\"Request: {request.Method} {request.RequestUri}\"); var response = await base.SendAsync(request, cancellationToken); Console.WriteLine($\"Response: {response.StatusCode}\"); return response; } } // Create a list of custom handlers var handlers = new List<DelegatingHandler> { new LoggingHandler() }; // Create HttpClient with custom handlers using the factory var httpClient = TdxClientFactory.CreateHttpClient(handlers, tenant); // Inject your HttpClient into TdxClient var client = new TdxClient(httpClient, tenant, beId, webServicesKey); // Authenticate and use await client.AuthenticateAsync(); var tickets = await client.Tickets(\"244\")[\"12345\"].GetAsync(); Advanced: Adding Multiple Handlers (Logging + Retry + Telemetry) var handlers = new List<DelegatingHandler> { new LoggingHandler(), new RetryHandler(), // Your custom retry handler if you have one new TelemetryHandler() // Your telemetry handler for metrics }; var httpClient = TdxClientFactory.CreateHttpClient(handlers, tenant); var client = new TdxClient(httpClient, tenant, beId, webServicesKey); await client.AuthenticateAsync(); // Now all requests go through the pipeline of your handlers var tickets = await client.Tickets(\"244\")[\"12345\"].GetAsync(); ⚠️ Not Recommended: Manual HttpClient Instantiation You will need to handle your own retry policies. // Use only for quick tests or console apps var httpClient = new HttpClient { BaseAddress = new Uri(\"https://your-org.teamdynamix.com/TDWebApi/api/\") }; var tdxClient = new TdxClient(httpClient, \"your-webservices-key\", \"your-beid\"); This bypasses DI scopes, Polly retry policies, DNS refresh handling, and other best practices. \uD83D\uDE80 Usage Exmaple \uD83D\uDD0D Search for a Person var results = await tdxClient.Users.Search .WithEmail(\"jdoe@yourorg.edu\") .ExecuteAsync(); \uD83D\uDCC4 Get a Ticket by ID var ticket = await tdxClient.Tickets(\"244\")[\"123456\"].GetAsync(); \uD83D\uDCDD Create a Ticket var ticketRequest = new TicketRequest { Title = \"New Hire Onboarding\", RequestorUid = \"abc-123\", Type = TicketType.OnboardingOrJobUpdate, Description = \"Provision access and equipment\", ResponsibleGroupId = \"4000\" }; var ticket = await tdxClient.Tickets(\"244\").Create(ticketRequest.MapToTicket()); \uD83D\uDCDD Create ticket cont. var ticket = await tdxClient.Tickets(\"244\").Create().WithTitle(\"...\")... // if you attempt to send without all required fields it will error our and notify you ✅ Resolve a Ticket await tdxClient.Tickets(\"244\")[\"123456\"] .SetStatus(TicketStatus.Resolved) .WithComment(\"Issue resolved by help desk.\") .UpdateAsync(); ⚙️ TdxClientOptions Customize retry/throttling behavior: var options = new TdxClientOptions { MaxRetries = 3, EnableThrottleCountdownLogging = true, OnThrottleWait = remaining => Console.WriteLine($\"Waiting {remaining.TotalSeconds}...\"), OnThrottleContinue = () => Console.WriteLine(\"Continuing.\") }; \uD83E\uDDF1 Structure TdxClient ├── People │ └── Search ├── Tickets │ ├── Create │ └── [ticketId] │ ├── Get │ ├── SetStatus │ └── AddFeedEntry \uD83D\uDCE6 Extending You can add more fluent builders by extending BaseRequestBuilder: public class AssetsRequestBuilder : BaseRequestBuilder { public AssetsRequestBuilder(TdxBaseClient client) : base(\"assets\", client) { } public Task<Asset> GetAssetAsync(string id) => SendAsync<Asset>(CreateRequest(HttpMethod.Get, id)); } \uD83E\uDDEA Testing You can mock the TdxBaseClient and HttpClient layers for unit testing. Also would recommend implementing your own httpclient purely to repoint to \uD83D\uDD10 Authentication Supports Web Services Key-based authentication. If your API uses OAuth, you’ll need to extend TdxBaseClient accordingly. \uD83D\uDCC4 License MIT \uD83D\uDE4B Support / Contribution Open an issue or submit a pull request — contributions welcome!"
  }
}