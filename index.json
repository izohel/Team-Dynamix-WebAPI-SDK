{
  "api/Itsm.Tdx.WebApi.Accounts.AccountItemRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.Accounts.AccountItemRequestBuilder.html",
    "title": "Class AccountItemRequestBuilder | TdxWebApiDocs",
    "summary": "Class AccountItemRequestBuilder Namespace Itsm.Tdx.WebApi.Accounts Assembly Itsm.Tdx.WebApi.dll Provides operations to retrieve information about a specific account/department in the TeamDynamix system. public class AccountItemRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder AccountItemRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AccountItemRequestBuilder(string, TdxBaseClient) Initializes a new instance of the AccountItemRequestBuilder class. public AccountItemRequestBuilder(string path, TdxBaseClient client) Parameters path string The path segment for the specific account resource. client TdxBaseClient The TdxBaseClient used to send HTTP requests. Methods GetAsync() Retrieves detailed information for a specific Account. public Task<Account> GetAsync() Returns Task<Account> An Account object with full details."
  },
  "api/Itsm.Tdx.WebApi.Accounts.AccountsRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.Accounts.AccountsRequestBuilder.html",
    "title": "Class AccountsRequestBuilder | TdxWebApiDocs",
    "summary": "Class AccountsRequestBuilder Namespace Itsm.Tdx.WebApi.Accounts Assembly Itsm.Tdx.WebApi.dll Contains methods for working with accounts/departments in the TeamDynamix API. public class AccountsRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder AccountsRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors AccountsRequestBuilder(TdxBaseClient) Initializes a new instance of the AccountsRequestBuilder class with the specified client. The base path is set to \"accounts\". public AccountsRequestBuilder(TdxBaseClient client) Parameters client TdxBaseClient The TdxBaseClient used to send requests. Properties this[string] Gets a request builder for a specific account by its identifier. This allows further operations scoped to a single account. Corresponds to the endpoint: GET https://{{tenant}}.teamdynamix.com/TDWebApi/api/accounts/{id}. public AccountItemRequestBuilder this[string accountId] { get; } Parameters accountId string The ID of the account. Property Value AccountItemRequestBuilder Methods GetAsync() Retrieves a list of all active accounts/departments. This method calls the endpoint: GET https://{{tenant}}.teamdynamix.com/TDWebApi/api/accounts. Note that this does not return full account or department details. public Task<List<Account>> GetAsync() Returns Task<List<Account>> A task that represents the asynchronous operation. The task result contains a list of Account objects."
  },
  "api/Itsm.Tdx.WebApi.Accounts.Models.Account.html": {
    "href": "api/Itsm.Tdx.WebApi.Accounts.Models.Account.html",
    "title": "Class Account | TdxWebApiDocs",
    "summary": "Class Account Namespace Itsm.Tdx.WebApi.Accounts.Models Assembly Itsm.Tdx.WebApi.dll public class Account Inheritance object Account Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Address1 The first address line of the account. Editable via the API. [JsonProperty(\"Address1\")] public string? Address1 { get; set; } Property Value string Address2 The second address line of the account. Editable via the API. [JsonProperty(\"Address2\")] public string? Address2 { get; set; } Property Value string Address3 The third address line of the account. Editable via the API. [JsonProperty(\"Address3\")] public string? Address3 { get; set; } Property Value string Address4 The fourth address line of the account. Editable via the API. [JsonProperty(\"Address4\")] public string? Address4 { get; set; } Property Value string Attributes The custom attributes of the account. Editable via the API. [JsonProperty(\"Attributes\")] public List<CustomAttribute>? Attributes { get; set; } Property Value List<CustomAttribute> City The city of the account. Editable via the API. [JsonProperty(\"City\")] public string? City { get; set; } Property Value string Code The code for the account. Editable via the API. [JsonProperty(\"Code\")] public string? Code { get; set; } Property Value string Country The country of the account. Editable via the API. [JsonProperty(\"Country\")] public string? Country { get; set; } Property Value string CreatedDate The date the account was created. [JsonProperty(\"CreatedDate\")] public DateTime CreatedDate { get; set; } Property Value DateTime Fax The fax number of the account. Editable via the API. [JsonProperty(\"Fax\")] public string? Fax { get; set; } Property Value string Id The ID of the account. [JsonProperty(\"ID\")] public required int Id { get; set; } Property Value int IndustryId The ID of the industry associated with the account. Editable via the API. [JsonProperty(\"IndustryID\")] public int IndustryId { get; set; } Property Value int IndustryName The name of the industry associated with the account. [JsonProperty(\"IndustryName\")] public string? IndustryName { get; set; } Property Value string IsActive The active status of the account. Editable via the API. [JsonProperty(\"IsActive\")] public bool IsActive { get; set; } Property Value bool ManagerFullName The full name of the manager for the account. [JsonProperty(\"ManagerFullName\")] public string? ManagerFullName { get; set; } Property Value string ManagerUid The UID of the manager for the account. Editable via the API. [JsonProperty(\"ManagerUID\")] public string? ManagerUid { get; set; } Property Value string ModifiedDate The last modified date of the account. [JsonProperty(\"ModifiedDate\")] public DateTime ModifiedDate { get; set; } Property Value DateTime Name The name of the account. This field is required and editable via the API. [JsonProperty(\"Name\")] public string? Name { get; set; } Property Value string Notes Notes for the account. Editable via the API. [JsonProperty(\"Notes\")] public string? Notes { get; set; } Property Value string ParentId The ID of the parent associated with the account, or null if the account has no parent. Editable via the API. [JsonProperty(\"ParentID\")] public int? ParentId { get; set; } Property Value int? ParentName The name of the parent associated with the account, or null if the account has no parent. [JsonProperty(\"ParentName\")] public string? ParentName { get; set; } Property Value string Phone The phone number of the account. Editable via the API. [JsonProperty(\"Phone\")] public string? Phone { get; set; } Property Value string PostalCode The postal code of the account. Editable via the API. [JsonProperty(\"PostalCode\")] public string? PostalCode { get; set; } Property Value string StateAbbr The abbreviation of the state/province associated with the account. Editable via the API. [JsonProperty(\"StateAbbr\")] public string? StateAbbr { get; set; } Property Value string StateName The state/province of the account. [JsonProperty(\"StateName\")] public string? StateName { get; set; } Property Value string Url The website URL of the account. Editable via the API. [JsonProperty(\"Url\")] public string? Url { get; set; } Property Value string"
  },
  "api/Itsm.Tdx.WebApi.Accounts.Models.html": {
    "href": "api/Itsm.Tdx.WebApi.Accounts.Models.html",
    "title": "Namespace Itsm.Tdx.WebApi.Accounts.Models | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Accounts.Models Classes Account"
  },
  "api/Itsm.Tdx.WebApi.Accounts.html": {
    "href": "api/Itsm.Tdx.WebApi.Accounts.html",
    "title": "Namespace Itsm.Tdx.WebApi.Accounts | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Accounts Classes AccountItemRequestBuilder Provides operations to retrieve information about a specific account/department in the TeamDynamix system. AccountsRequestBuilder Contains methods for working with accounts/departments in the TeamDynamix API."
  },
  "api/Itsm.Tdx.WebApi.Apps.Models.UserApplication.html": {
    "href": "api/Itsm.Tdx.WebApi.Apps.Models.UserApplication.html",
    "title": "Class UserApplication | TdxWebApiDocs",
    "summary": "Class UserApplication Namespace Itsm.Tdx.WebApi.Apps.Models Assembly Itsm.Tdx.WebApi.dll An association that a user has with an application. public class UserApplication Inheritance object UserApplication Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Description The description of the application. Nullable. [JsonProperty(\"Description\")] public string? Description { get; set; } Property Value string ID The ID of the application. [JsonProperty(\"ID\")] public int ID { get; set; } Property Value int IsActive The active status of the application. [JsonProperty(\"IsActive\")] public bool IsActive { get; set; } Property Value bool IsAdministrator The administrator status of the user for the application. [JsonProperty(\"IsAdministrator\")] public bool IsAdministrator { get; set; } Property Value bool IsDefault The default status of the application. [JsonProperty(\"IsDefault\")] public bool IsDefault { get; set; } Property Value bool Name The name of the application. [JsonProperty(\"Name\")] public string? Name { get; set; } Property Value string SecurityRoleId The ID of the security role that the user has within the application. Nullable. [JsonProperty(\"SecurityRoleId\")] public string? SecurityRoleId { get; set; } Property Value string SecurityRoleName The name of the security role that the user has within the application. Nullable. [JsonProperty(\"SecurityRoleName\")] public string? SecurityRoleName { get; set; } Property Value string SystemClass The system-defined class of the application. [JsonProperty(\"SystemClass\")] public string? SystemClass { get; set; } Property Value string"
  },
  "api/Itsm.Tdx.WebApi.Apps.Models.html": {
    "href": "api/Itsm.Tdx.WebApi.Apps.Models.html",
    "title": "Namespace Itsm.Tdx.WebApi.Apps.Models | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Apps.Models Classes UserApplication An association that a user has with an application."
  },
  "api/Itsm.Tdx.WebApi.Attachments.Models.Attachment.html": {
    "href": "api/Itsm.Tdx.WebApi.Attachments.Models.Attachment.html",
    "title": "Class Attachment | TdxWebApiDocs",
    "summary": "Class Attachment Namespace Itsm.Tdx.WebApi.Attachments.Models Assembly Itsm.Tdx.WebApi.dll An attachment. public class Attachment Inheritance object Attachment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AttachmentType The type of the attachment. [JsonProperty(\"AttachmentType\")] public AttachmentType AttachmentType { get; set; } Property Value AttachmentType ContentUri The URI to retrieve the contents of the attachment via the web API. [JsonProperty(\"ContentUri\")] public string ContentUri { get; set; } Property Value string CreatedDate The upload date of the attachment. [JsonProperty(\"CreatedDate\")] public DateTime CreatedDate { get; set; } Property Value DateTime CreatedFullName The full name of the user who uploaded the attachment. [JsonProperty(\"CreatedFullName\")] public string CreatedFullName { get; set; } Property Value string CreatedUid The UID of the user who uploaded the attachment. [JsonProperty(\"CreatedUID\")] public Guid CreatedUid { get; set; } Property Value Guid Id The ID of the attachment. [JsonProperty(\"ID\")] public string? Id { get; set; } Property Value string ItemId The ID of the item associated with the attachment. [JsonProperty(\"ItemID\")] public int ItemId { get; set; } Property Value int Name The file name of the attachment. [JsonProperty(\"Name\")] public string Name { get; set; } Property Value string Size The size of the attachment, in bytes. [JsonProperty(\"Size\")] public int Size { get; set; } Property Value int Uri The URI to retrieve the full details of the attachment via the web API. [JsonProperty(\"Uri\")] public string Uri { get; set; } Property Value string"
  },
  "api/Itsm.Tdx.WebApi.Attachments.Models.AttachmentType.html": {
    "href": "api/Itsm.Tdx.WebApi.Attachments.Models.AttachmentType.html",
    "title": "Enum AttachmentType | TdxWebApiDocs",
    "summary": "Enum AttachmentType Namespace Itsm.Tdx.WebApi.Attachments.Models Assembly Itsm.Tdx.WebApi.dll Describes the different types of supported attachments. public enum AttachmentType Fields Announcement = 7 An announcement attachment. Asset = 27 An asset attachment. CalendarEvent = 57 A calendar event attachment. ConfigurationItem = 63 A configuration item attachment. Contract = 29 An asset contract attachment. Expense = 62 An expense attachment. Forums = 13 A forum post attachment. Issue = 3 An issue attachment. KnowledgeBase = 26 A Knowledge Base article attachment. Location = 71 A location attachment. None = 0 Indicates that the type of attachment is unknown. PortfolioIssue = 83 A portfolio issue attachment. PortfolioRisk = 84 A portfolio risk attachment. Project = 1 A project attachment. Risk = 72 A risk attachment. Service = 47 A service attachment. Ticket = 9 A ticket attachment."
  },
  "api/Itsm.Tdx.WebApi.Attachments.Models.html": {
    "href": "api/Itsm.Tdx.WebApi.Attachments.Models.html",
    "title": "Namespace Itsm.Tdx.WebApi.Attachments.Models | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Attachments.Models Classes Attachment An attachment. Enums AttachmentType Describes the different types of supported attachments."
  },
  "api/Itsm.Tdx.WebApi.BaseRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.BaseRequestBuilder.html",
    "title": "Class BaseRequestBuilder | TdxWebApiDocs",
    "summary": "Class BaseRequestBuilder Namespace Itsm.Tdx.WebApi Assembly Itsm.Tdx.WebApi.dll Abstract base class for building and sending HTTP requests to the TeamDynamix API. Provides helper methods to create requests with optional JSON bodies and send them using a TdxBaseClient instance. public abstract class BaseRequestBuilder Inheritance object BaseRequestBuilder Derived AccountItemRequestBuilder AccountsRequestBuilder PeopleRequestBuilder PersonByIdRequestBuilder PersonLookupRequestBuilder PersonSearchRequestBuilder TicketCreateObjectRequestBuilder TicketCreateRequestBuilder TicketItemRequestBuilder TicketsRequestBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors BaseRequestBuilder(string, TdxBaseClient) Initializes a new instance of the BaseRequestBuilder class with the specified base path and client. protected BaseRequestBuilder(string path, TdxBaseClient client) Parameters path string The base API path for the resource (relative URI). client TdxBaseClient The TdxBaseClient to use for sending requests. Fields Client The TdxBaseClient instance used to send HTTP requests. protected readonly TdxBaseClient Client Field Value TdxBaseClient Path The base path (relative URI) for the API endpoint this request builder targets. protected readonly string Path Field Value string Methods CreateRequest(HttpMethod, string, object?) Creates an HttpRequestMessage with the specified HTTP method, optional relative path, and optional request body serialized as JSON. protected HttpRequestMessage CreateRequest(HttpMethod method, string relativePath = \"\", object? body = null) Parameters method HttpMethod The HTTP method to use (GET, POST, etc.). relativePath string An optional relative path to append to the base Path. If null or empty, the base Path is used as-is. body object An optional object to serialize as JSON in the request body. If null, no body content is added. Returns HttpRequestMessage A configured HttpRequestMessage instance. SendAsync(HttpRequestMessage) Sends an HTTP request asynchronously without expecting a response body. protected Task SendAsync(HttpRequestMessage request) Parameters request HttpRequestMessage The HttpRequestMessage to send. Returns Task A task representing the asynchronous send operation. SendAsync<T>(HttpRequestMessage) Sends an HTTP request asynchronously and deserializes the JSON response content into an instance of type T. protected Task<T> SendAsync<T>(HttpRequestMessage request) Parameters request HttpRequestMessage The HttpRequestMessage to send. Returns Task<T> A task representing the asynchronous operation, with the deserialized response object as result. Type Parameters T The expected type of the deserialized response."
  },
  "api/Itsm.Tdx.WebApi.CustomAttributes.Models.CustomAttribute.html": {
    "href": "api/Itsm.Tdx.WebApi.CustomAttributes.Models.CustomAttribute.html",
    "title": "Class CustomAttribute | TdxWebApiDocs",
    "summary": "Class CustomAttribute Namespace Itsm.Tdx.WebApi.CustomAttributes.Models Assembly Itsm.Tdx.WebApi.dll Represents a custom attribute in the TeamDynamix system. public class CustomAttribute Inheritance object CustomAttribute Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AssociatedItemIds The item types (represented as IDs) associated with the attribute. Nullable. [JsonProperty(\"AssociatedItemIDs\")] public List<int>? AssociatedItemIds { get; set; } Property Value List<int> Choices The choices associated with the attribute. Nullable. [JsonProperty(\"Choices\")] public List<CustomAttributeChoice>? Choices { get; set; } Property Value List<CustomAttributeChoice> ChoicesText Not used. Nullable. [JsonProperty(\"ChoicesText\")] public string? ChoicesText { get; set; } Property Value string DataType The data type of the attribute. [JsonProperty(\"DataType\")] public string? DataType { get; set; } Property Value string Description The description of the attribute. Nullable. [JsonProperty(\"Description\")] public string? Description { get; set; } Property Value string FieldType The field type of the attribute. [JsonProperty(\"FieldType\")] public string? FieldType { get; set; } Property Value string Id The ID of the attribute. [JsonProperty(\"ID\")] public int Id { get; set; } Property Value int IsRequired The required status of the attribute. [JsonProperty(\"IsRequired\")] public bool IsRequired { get; set; } Property Value bool IsUpdatable The updatable status of the attribute. [JsonProperty(\"IsUpdatable\")] public bool IsUpdatable { get; set; } Property Value bool Name The name of the attribute. [JsonProperty(\"Name\")] public string? Name { get; set; } Property Value string Order The explicit sort order of the attribute. [JsonProperty(\"Order\")] public int Order { get; set; } Property Value int SectionId The ID of the section associated with the attribute. [JsonProperty(\"SectionID\")] public int SectionId { get; set; } Property Value int SectionName The name of the section associated with the attribute. Nullable. [JsonProperty(\"SectionName\")] public string? SectionName { get; set; } Property Value string Value The current value of the attribute. Nullable. [JsonProperty(\"Value\")] public string? Value { get; set; } Property Value string ValueText The current value of the attribute in read-only text format. Nullable. [JsonProperty(\"ValueText\")] public string? ValueText { get; set; } Property Value string"
  },
  "api/Itsm.Tdx.WebApi.CustomAttributes.Models.CustomAttributeChoice.html": {
    "href": "api/Itsm.Tdx.WebApi.CustomAttributes.Models.CustomAttributeChoice.html",
    "title": "Class CustomAttributeChoice | TdxWebApiDocs",
    "summary": "Class CustomAttributeChoice Namespace Itsm.Tdx.WebApi.CustomAttributes.Models Assembly Itsm.Tdx.WebApi.dll Represents a selectable choice for a custom attribute in the TeamDynamix system. public class CustomAttributeChoice Inheritance object CustomAttributeChoice Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties DateCreated The created date of the attribute choice. [JsonProperty(\"DateCreated\")] public DateTime DateCreated { get; set; } Property Value DateTime DateModified The last modified date of the attribute choice. [JsonProperty(\"DateModified\")] public DateTime DateModified { get; set; } Property Value DateTime Id The ID of the attribute choice. [JsonProperty(\"ID\")] public int Id { get; set; } Property Value int IsActive The active status of the attribute choice. Editable via the API. Required. [JsonProperty(\"IsActive\")] public bool IsActive { get; set; } Property Value bool Name The name of the attribute choice. This doubles as the display text. Editable via the API. Required. [JsonProperty(\"Name\")] public string? Name { get; set; } Property Value string Order The sort order of the attribute choice in the list. Editable via the API. Required. [JsonProperty(\"Order\")] public int Order { get; set; } Property Value int"
  },
  "api/Itsm.Tdx.WebApi.CustomAttributes.Models.html": {
    "href": "api/Itsm.Tdx.WebApi.CustomAttributes.Models.html",
    "title": "Namespace Itsm.Tdx.WebApi.CustomAttributes.Models | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.CustomAttributes.Models Classes CustomAttribute Represents a custom attribute in the TeamDynamix system. CustomAttributeChoice Represents a selectable choice for a custom attribute in the TeamDynamix system."
  },
  "api/Itsm.Tdx.WebApi.Exceptions.UserException.html": {
    "href": "api/Itsm.Tdx.WebApi.Exceptions.UserException.html",
    "title": "Class UserException | TdxWebApiDocs",
    "summary": "Class UserException Namespace Itsm.Tdx.WebApi.Exceptions Assembly Itsm.Tdx.WebApi.dll public class UserException : Exception, ISerializable Inheritance object Exception UserException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Constructors UserException() public UserException() UserException(string?) public UserException(string? message) Parameters message string UserException(string?, Exception?) public UserException(string? message, Exception? innerException) Parameters message string innerException Exception"
  },
  "api/Itsm.Tdx.WebApi.Exceptions.html": {
    "href": "api/Itsm.Tdx.WebApi.Exceptions.html",
    "title": "Namespace Itsm.Tdx.WebApi.Exceptions | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Exceptions Classes UserException"
  },
  "api/Itsm.Tdx.WebApi.Extensions.TdxClientOptions.html": {
    "href": "api/Itsm.Tdx.WebApi.Extensions.TdxClientOptions.html",
    "title": "Class TdxClientOptions | TdxWebApiDocs",
    "summary": "Class TdxClientOptions Namespace Itsm.Tdx.WebApi.Extensions Assembly Itsm.Tdx.WebApi.dll Configuration options for the TeamDynamix API client. This class provides settings that control the behavior of the client, including how it constructs the base API URL, and how it handles throttling responses from the API (HTTP 429 Too Many Requests). Use these options to customize retry logic, logging, and notification callbacks related to API throttling to improve robustness and observability of API calls. Applies only if not overriding the default HttpClient. public class TdxClientOptions Inheritance object TdxClientOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties BaseApiUrl Optional. The fully formed base API URL for the TeamDynamix API. If this is not set, the URL will be constructed automatically based on the Tenant identifier. Setting this explicitly can be useful for targeting different environments such as your demo envrionment or versions. public string? BaseApiUrl { get; set; } Property Value string EnableThrottleCountdownLogging If true, enables logging of the countdown timer during throttle wait periods. Useful for debugging or monitoring retry behavior. Default is false. public bool EnableThrottleCountdownLogging { get; set; } Property Value bool MaxRetries The maximum number of retry attempts the client will make after receiving a throttling response (HTTP 429). Default value is 3, meaning three retries after the initial failure. Increasing this number allows more retries but may increase overall latency. public int MaxRetries { get; set; } Property Value int OnThrottleContinue An optional callback invoked immediately after the throttling wait has completed and before the client retries the request. This can be used to notify that the request will be retried. public Action? OnThrottleContinue { get; set; } Property Value Action OnThrottleWait An optional callback invoked before the client waits due to a throttling response (HTTP 429). The TimeSpan parameter indicates how long the client will wait before retrying. public Action<TimeSpan>? OnThrottleWait { get; set; } Property Value Action<TimeSpan> Remarks This allows the caller to log or display information about the wait time."
  },
  "api/Itsm.Tdx.WebApi.Extensions.html": {
    "href": "api/Itsm.Tdx.WebApi.Extensions.html",
    "title": "Namespace Itsm.Tdx.WebApi.Extensions | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Extensions Classes TdxClientOptions Configuration options for the TeamDynamix API client. This class provides settings that control the behavior of the client, including how it constructs the base API URL, and how it handles throttling responses from the API (HTTP 429 Too Many Requests). Use these options to customize retry logic, logging, and notification callbacks related to API throttling to improve robustness and observability of API calls. Applies only if not overriding the default HttpClient."
  },
  "api/Itsm.Tdx.WebApi.KnowledgeBase.Models.ArticleStatus.html": {
    "href": "api/Itsm.Tdx.WebApi.KnowledgeBase.Models.ArticleStatus.html",
    "title": "Enum ArticleStatus | TdxWebApiDocs",
    "summary": "Enum ArticleStatus Namespace Itsm.Tdx.WebApi.KnowledgeBase.Models Assembly Itsm.Tdx.WebApi.dll Describes the different article statuses. public enum ArticleStatus Fields Approved = 3 Used for articles that have been approved. Archived = 5 Used for articles that have been archived. None = 0 A \"none\" status for filtering purposes. Should not be used in normal operations. NotSubmitted = 1 Used for articles that have not been submitted. Rejected = 4 Used for articles that have been rejected. Submitted = 2 Used for articles that have been submitted."
  },
  "api/Itsm.Tdx.WebApi.KnowledgeBase.Models.html": {
    "href": "api/Itsm.Tdx.WebApi.KnowledgeBase.Models.html",
    "title": "Namespace Itsm.Tdx.WebApi.KnowledgeBase.Models | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.KnowledgeBase.Models Enums ArticleStatus Describes the different article statuses."
  },
  "api/Itsm.Tdx.WebApi.People.Models.User.html": {
    "href": "api/Itsm.Tdx.WebApi.People.Models.User.html",
    "title": "Class User | TdxWebApiDocs",
    "summary": "Class User Namespace Itsm.Tdx.WebApi.People.Models Assembly Itsm.Tdx.WebApi.dll Represents a user in the TeamDynamix system. public class User Inheritance object User Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AboutMe The \"About Me\" information associated with the user. Editable via API. Nullable. [JsonProperty(\"AboutMe\")] public string? AboutMe { get; set; } Property Value string AlertEmail The alert email address of the user where system notifications are delivered. Editable via API. Nullable. [JsonProperty(\"AlertEmail\")] public string? AlertEmail { get; set; } Property Value string AlternateEmail The alternate email address of the user. Editable via API. Nullable. [JsonProperty(\"AlternateEmail\")] public string? AlternateEmail { get; set; } Property Value string AlternateId The alternate ID of the user. Editable via API. Nullable. [JsonProperty(\"AlternateID\")] public string? AlternateId { get; set; } Property Value string Applications The system-defined (non-platform) applications associated with the user. Editable via API. Nullable. [JsonProperty(\"Applications\")] public List<string>? Applications { get; set; } Property Value List<string> ApplyTechnicianSignatureToReplies Determines whether the technician signature is applied to the replies for all tickets and ticket tasks. Editable via API. [JsonProperty(\"ApplyTechnicianSignatureToReplies\")] public bool ApplyTechnicianSignatureToReplies { get; set; } Property Value bool ApplyTechnicianSignatureToUpdatesAndComments Determines whether the technician signature is applied to the updates and comments for all tickets and ticket tasks. Editable via API. [JsonProperty(\"ApplyTechnicianSignatureToUpdatesAndComments\")] public bool ApplyTechnicianSignatureToUpdatesAndComments { get; set; } Property Value bool Attributes The custom attributes associated with the user. Editable via API. Nullable. [JsonProperty(\"Attributes\")] public List<CustomAttribute>? Attributes { get; set; } Property Value List<CustomAttribute> AuthenticationProviderID The ID of the authentication provider the new user will use for authentication. Editable via API. Nullable. [JsonProperty(\"AuthenticationProviderID\")] public int? AuthenticationProviderID { get; set; } Property Value int? AuthenticationUserName The authentication username of the user, used for authenticating with non-TeamDynamix authentication types. Editable via API. Nullable. [JsonProperty(\"AuthenticationUserName\")] public string? AuthenticationUserName { get; set; } Property Value string BeId The UID of the organization associated with the user. [JsonProperty(\"BEID\")] public string? BeId { get; set; } Property Value string BeIdInt The integer ID of the organization associated with the user. [JsonProperty(\"BEIDInt\")] public int BeIdInt { get; set; } Property Value int Company The company of the user. Editable via API. Required. [JsonProperty(\"Company\")] public string? Company { get; set; } Property Value string CostRate The cost rate of the user. Editable via API. [JsonProperty(\"CostRate\")] public double CostRate { get; set; } Property Value double DefaultAccountId The ID of the default account/department associated with the user. Editable via API. [JsonProperty(\"DefaultAccountID\")] public int DefaultAccountId { get; set; } Property Value int DefaultAccountName The name of the default account/department associated with the user. [JsonProperty(\"DefaultAccountName\")] public string? DefaultAccountName { get; set; } Property Value string DefaultPriorityID The ID of the default priority associated with the user. Editable via API. [JsonProperty(\"DefaultPriorityID\")] public int DefaultPriorityID { get; set; } Property Value int DefaultPriorityName The name of the default priority associated with the user. [JsonProperty(\"DefaultPriorityName\")] public string? DefaultPriorityName { get; set; } Property Value string DefaultRate The default bill rate of the user. Editable via API. [JsonProperty(\"DefaultRate\")] public double DefaultRate { get; set; } Property Value double EndDate The date after which the user is no longer available for scheduling and no longer required to log time. Editable via API. [JsonProperty(\"EndDate\")] public DateTime EndDate { get; set; } Property Value DateTime ExternalId The organizational ID of the user. Editable via API. Nullable. [JsonProperty(\"ExternalID\")] public string? ExternalId { get; set; } Property Value string Fax The fax number of the user. Editable via API. Nullable. [JsonProperty(\"Fax\")] public string? Fax { get; set; } Property Value string FirstName The first name of the user. Editable via API. Required. [JsonProperty(\"FirstName\")] public string? FirstName { get; set; } Property Value string FullName The full name of the user. [JsonProperty(\"FullName\")] public string? FullName { get; set; } Property Value string GroupIds The IDs of the groups associated with the user. Nullable. [JsonProperty(\"GroupIDs\")] public List<int>? GroupIds { get; set; } Property Value List<int> HomeAddress The home address of the user. Editable via API. Nullable. [JsonProperty(\"HomeAddress\")] public string? HomeAddress { get; set; } Property Value string HomeCity The home city of the user. Editable via API. Nullable. [JsonProperty(\"HomeCity\")] public string? HomeCity { get; set; } Property Value string HomeCountry The home country of the user. Editable via API. Nullable. [JsonProperty(\"HomeCountry\")] public string? HomeCountry { get; set; } Property Value string HomePhone The home phone number of the user. Editable via API. Nullable. [JsonProperty(\"HomePhone\")] public string? HomePhone { get; set; } Property Value string HomeState The home state abbreviation of the user. Editable via API. Nullable. [JsonProperty(\"HomeState\")] public string? HomeState { get; set; } Property Value string HomeZip The home zip code of the user. Editable via API. Nullable. [JsonProperty(\"HomeZip\")] public string? HomeZip { get; set; } Property Value string IMHandle The Instant Messenger (IM) username/handle associated with the user. Editable via API. Nullable. [JsonProperty(\"IMHandle\")] public string? IMHandle { get; set; } Property Value string IMProvider The Instant Messenger (IM) provider associated with the user. Editable via API. Nullable. [JsonProperty(\"IMProvider\")] public string? IMProvider { get; set; } Property Value string IsActive The active status of the user. Editable via API. [JsonProperty(\"IsActive\")] public bool IsActive { get; set; } Property Value bool IsCapacityManaged Whether the user's capacity is managed, meaning they can have capacity and appear on capacity/availability reports. Editable via API. [JsonProperty(\"IsCapacityManaged\")] public bool IsCapacityManaged { get; set; } Property Value bool IsConfidential The confidential status of the user. Editable via API. [JsonProperty(\"IsConfidential\")] public bool IsConfidential { get; set; } Property Value bool IsEmployee The employee status of the user. Editable via API. [JsonProperty(\"IsEmployee\")] public bool IsEmployee { get; set; } Property Value bool LastName The last name of the user. Editable via API. Required. [JsonProperty(\"LastName\")] public string? LastName { get; set; } Property Value string LocationId The ID of the location associated with the user. Editable via API. [JsonProperty(\"LocationID\")] public int LocationId { get; set; } Property Value int LocationName The name of the location associated with the user. [JsonProperty(\"LocationName\")] public string? LocationName { get; set; } Property Value string LocationRoomId The ID of the location room associated with the user. Editable via API. [JsonProperty(\"LocationRoomID\")] public int LocationRoomId { get; set; } Property Value int LocationRoomName The name of the location room associated with the user. [JsonProperty(\"LocationRoomName\")] public string? LocationRoomName { get; set; } Property Value string MiddleName The middle name of the user. Editable via API. Nullable. [JsonProperty(\"MiddleName\")] public string? MiddleName { get; set; } Property Value string MobilePhone The mobile phone number of the user. Editable via API. Nullable. [JsonProperty(\"MobilePhone\")] public string? MobilePhone { get; set; } Property Value string Nickname The nickname of the user. Editable via API. Nullable. [JsonProperty(\"Nickname\")] public string? Nickname { get; set; } Property Value string OrgApplications The organizationally-defined (platform) applications associated with the user. Editable via API. Nullable. [JsonProperty(\"OrgApplications\")] public List<UserApplication>? OrgApplications { get; set; } Property Value List<UserApplication> OtherPhone The other phone number of the user. Editable via API. Nullable. [JsonProperty(\"OtherPhone\")] public string? OtherPhone { get; set; } Property Value string Pager The pager number of the user. Editable via API. Nullable. [JsonProperty(\"Pager\")] public string? Pager { get; set; } Property Value string Permissions The global security role permissions associated with the user. Nullable. [JsonProperty(\"Permissions\")] public List<string>? Permissions { get; set; } Property Value List<string> PrimaryClientPortalApplicationId The ID of the primary client portal application associated with the user. Editable via API. Nullable. [JsonProperty(\"PrimaryClientPortalApplicationID\")] public int? PrimaryClientPortalApplicationId { get; set; } Property Value int? PrimaryEmail The primary email address of the user. Editable via API. Required. [JsonProperty(\"PrimaryEmail\")] public required string PrimaryEmail { get; set; } Property Value string PrimaryPhone The primary phone number of the user. Editable via API. Nullable. [JsonProperty(\"PrimaryPhone\")] public string? PrimaryPhone { get; set; } Property Value string ProfileImageFileName The profile image file name of the user. [JsonProperty(\"ProfileImageFileName\")] public string? ProfileImageFileName { get; set; } Property Value string ReferenceId The integer ID of the user. [JsonProperty(\"ReferenceID\")] public int ReferenceId { get; set; } Property Value int ReportTimeAfterDate The date after which the user should start reporting time, also governs capacity calculations. Editable via API. [JsonProperty(\"ReportTimeAfterDate\")] public DateTime ReportTimeAfterDate { get; set; } Property Value DateTime ReportsToFullName The full name of the person who the user reports to. [JsonProperty(\"ReportsToFullName\")] public string? ReportsToFullName { get; set; } Property Value string ReportsToUid The UID of the person who the user reports to. Editable via API. Nullable. [JsonProperty(\"ReportsToUID\")] public string? ReportsToUid { get; set; } Property Value string ResourcePoolID The ID of the resource pool associated with the user. Editable via API. [JsonProperty(\"ResourcePoolID\")] public int ResourcePoolID { get; set; } Property Value int ResourcePoolName The name of the resource pool associated with the user. [JsonProperty(\"ResourcePoolName\")] public string? ResourcePoolName { get; set; } Property Value string Salutation The salutation of the user. Editable via API. Nullable. [JsonProperty(\"Salutation\")] public string? Salutation { get; set; } Property Value string SecurityRoleId The UID of the global security role associated with the user. Editable via API. [JsonProperty(\"SecurityRoleID\")] public string? SecurityRoleId { get; set; } Property Value string SecurityRoleName The name of the global security role associated with the user. [JsonProperty(\"SecurityRoleName\")] public string? SecurityRoleName { get; set; } Property Value string ShouldReportTime Whether the user should report time. Editable via API. [JsonProperty(\"ShouldReportTime\")] public bool ShouldReportTime { get; set; } Property Value bool TechnicianSignature The technician signature associated with the user. Editable via API. Nullable. [JsonProperty(\"TechnicianSignature\")] public string? TechnicianSignature { get; set; } Property Value string Title The title of the user. Editable via API. Nullable. [JsonProperty(\"Title\")] public string? Title { get; set; } Property Value string TypeId The type of the user. [JsonProperty(\"TypeID\")] public UserType TypeId { get; set; } Property Value UserType TzName The name of the time zone associated with the user. [JsonProperty(\"TZName\")] public string? TzName { get; set; } Property Value string Tzid The ID of the time zone associated with the user. Editable via API. [JsonProperty(\"TZID\")] public int Tzid { get; set; } Property Value int Uid The UID of the user. [JsonProperty(\"UID\")] public required string Uid { get; set; } Property Value string UserName The username of the user. [JsonProperty(\"UserName\")] public required string UserName { get; set; } Property Value string WorkAddress The work address of the user. Editable via API. Nullable. [JsonProperty(\"WorkAddress\")] public string? WorkAddress { get; set; } Property Value string WorkCity The work city of the user. Editable via API. Nullable. [JsonProperty(\"WorkCity\")] public string? WorkCity { get; set; } Property Value string WorkCountry The work country of the user. Editable via API. Nullable. [JsonProperty(\"WorkCountry\")] public string? WorkCountry { get; set; } Property Value string WorkPhone The work phone number of the user. Editable via API. Nullable. [JsonProperty(\"WorkPhone\")] public string? WorkPhone { get; set; } Property Value string WorkState The work state abbreviation of the user. Editable via API. Nullable. [JsonProperty(\"WorkState\")] public string? WorkState { get; set; } Property Value string WorkZip The work zip code of the user. Editable via API. Nullable. [JsonProperty(\"WorkZip\")] public string? WorkZip { get; set; } Property Value string WorkableHours The number of workable hours in a work day for the user. Editable via API. [JsonProperty(\"WorkableHours\")] public double WorkableHours { get; set; } Property Value double"
  },
  "api/Itsm.Tdx.WebApi.People.Models.UserType.html": {
    "href": "api/Itsm.Tdx.WebApi.People.Models.UserType.html",
    "title": "Enum UserType | TdxWebApiDocs",
    "summary": "Enum UserType Namespace Itsm.Tdx.WebApi.People.Models Assembly Itsm.Tdx.WebApi.dll Describes the different types of users and customers tracked within TeamDynamix. public enum UserType Fields Customer = 2 Indicates that the user is classified as a customer, which means that they cannot log in to TeamDynamix. None = 0 Indicates that the type of the user could not be determined. Should not be used in normal operations. ResourcePlaceholder = 8 Indicates that the user is classified as a resource placeholder. These users act as a placeholder for actual users when planning out projects without knowing exactly who will be acting as the resource in question. ServiceAccount = 9 Indicates that the user is classified as a service account. These users will be able to authenticate and use the API, but they will not be able to log in to TDNext, TDMobile, TDAdmin, or TDClient. User = 1 Indicates that the user is classified as a full TeamDynamix user."
  },
  "api/Itsm.Tdx.WebApi.People.Models.html": {
    "href": "api/Itsm.Tdx.WebApi.People.Models.html",
    "title": "Namespace Itsm.Tdx.WebApi.People.Models | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.People.Models Classes User Represents a user in the TeamDynamix system. Enums UserType Describes the different types of users and customers tracked within TeamDynamix."
  },
  "api/Itsm.Tdx.WebApi.People.PeopleRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.People.PeopleRequestBuilder.html",
    "title": "Class PeopleRequestBuilder | TdxWebApiDocs",
    "summary": "Class PeopleRequestBuilder Namespace Itsm.Tdx.WebApi.People Assembly Itsm.Tdx.WebApi.dll Provides methods for interacting with people in the TeamDynamix system. This includes searching for people or retrieving them by UID. public class PeopleRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder PeopleRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PeopleRequestBuilder(TdxBaseClient) Initializes a new instance of the PeopleRequestBuilder class. public PeopleRequestBuilder(TdxBaseClient client) Parameters client TdxBaseClient The base TDX API client used for sending requests. Properties this[string] Gets a request builder to access a specific person by their UID. public PersonByIdRequestBuilder this[string uid] { get; } Parameters uid string The UID of the person to retrieve. Property Value PersonByIdRequestBuilder A PersonByIdRequestBuilder for the specified person. Search Gets a request builder used to search for people using various filters. public PersonSearchRequestBuilder Search { get; } Property Value PersonSearchRequestBuilder"
  },
  "api/Itsm.Tdx.WebApi.People.PersonByIdRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.People.PersonByIdRequestBuilder.html",
    "title": "Class PersonByIdRequestBuilder | TdxWebApiDocs",
    "summary": "Class PersonByIdRequestBuilder Namespace Itsm.Tdx.WebApi.People Assembly Itsm.Tdx.WebApi.dll Provides functionality to retrieve a person by their unique identifier (UID) from the TeamDynamix people database. public class PersonByIdRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder PersonByIdRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PersonByIdRequestBuilder(string, TdxBaseClient) Initializes a new instance of the PersonByIdRequestBuilder class. public PersonByIdRequestBuilder(string path, TdxBaseClient client) Parameters path string The relative API path to the specific person. client TdxBaseClient The TDX API client used to send the request. Methods GetAsync() Sends a GET request to retrieve the person identified by the specified UID. public Task<User> GetAsync() Returns Task<User> A User object representing the person."
  },
  "api/Itsm.Tdx.WebApi.People.PersonLookupRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.People.PersonLookupRequestBuilder.html",
    "title": "Class PersonLookupRequestBuilder | TdxWebApiDocs",
    "summary": "Class PersonLookupRequestBuilder Namespace Itsm.Tdx.WebApi.People Assembly Itsm.Tdx.WebApi.dll public class PersonLookupRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder PersonLookupRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PersonLookupRequestBuilder(TdxBaseClient, string) public PersonLookupRequestBuilder(TdxBaseClient client, string path) Parameters client TdxBaseClient path string"
  },
  "api/Itsm.Tdx.WebApi.People.PersonSearchRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.People.PersonSearchRequestBuilder.html",
    "title": "Class PersonSearchRequestBuilder | TdxWebApiDocs",
    "summary": "Class PersonSearchRequestBuilder Namespace Itsm.Tdx.WebApi.People Assembly Itsm.Tdx.WebApi.dll Provides functionality to search for people in the TeamDynamix people database based on various search criteria. public class PersonSearchRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder PersonSearchRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors PersonSearchRequestBuilder(string, TdxBaseClient) Initializes a new instance of the PersonSearchRequestBuilder class. public PersonSearchRequestBuilder(string path, TdxBaseClient client) Parameters path string The relative API path for the search endpoint. client TdxBaseClient The TDX API client used to send the request. Methods GetAsync() Executes the search with the provided criteria and returns a list of matching users. public Task<List<User>> GetAsync() Returns Task<List<User>> A list of User objects that match the search criteria. Exceptions InvalidOperationException Thrown when no search criteria have been provided. UserException Thrown when no matching users are found. With(string, string) Adds a custom search criterion to the search criteria. public PersonSearchRequestBuilder With(string key, string value) Parameters key string The key of the search criterion. value string The value of the search criterion. Returns PersonSearchRequestBuilder The current PersonSearchRequestBuilder instance. Exceptions ArgumentException Thrown when key or value is null or empty. WithEmail(string) Adds the email to the search criteria. public PersonSearchRequestBuilder WithEmail(string email) Parameters email string The email address of the person. Returns PersonSearchRequestBuilder The current PersonSearchRequestBuilder instance. WithExternalId(string) Adds the external ID to the search criteria. public PersonSearchRequestBuilder WithExternalId(string externalId) Parameters externalId string The external ID of the person. Returns PersonSearchRequestBuilder The current PersonSearchRequestBuilder instance. Exceptions ArgumentException Thrown when externalId is null or empty. WithFirstName(string) Adds the first name to the search criteria. public PersonSearchRequestBuilder WithFirstName(string firstName) Parameters firstName string The first name of the person. Returns PersonSearchRequestBuilder The current PersonSearchRequestBuilder instance. WithLastName(string) Adds the last name to the search criteria. public PersonSearchRequestBuilder WithLastName(string lastName) Parameters lastName string The last name of the person. Returns PersonSearchRequestBuilder The current PersonSearchRequestBuilder instance. WithUsername(string) Adds the username to the search criteria. public PersonSearchRequestBuilder WithUsername(string username) Parameters username string The username of the person. Returns PersonSearchRequestBuilder The current PersonSearchRequestBuilder instance. Exceptions ArgumentException Thrown when username is null or empty."
  },
  "api/Itsm.Tdx.WebApi.People.html": {
    "href": "api/Itsm.Tdx.WebApi.People.html",
    "title": "Namespace Itsm.Tdx.WebApi.People | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.People Classes PeopleRequestBuilder Provides methods for interacting with people in the TeamDynamix system. This includes searching for people or retrieving them by UID. PersonByIdRequestBuilder Provides functionality to retrieve a person by their unique identifier (UID) from the TeamDynamix people database. PersonLookupRequestBuilder PersonSearchRequestBuilder Provides functionality to search for people in the TeamDynamix people database based on various search criteria."
  },
  "api/Itsm.Tdx.WebApi.SharedModels.ResourceItem.html": {
    "href": "api/Itsm.Tdx.WebApi.SharedModels.ResourceItem.html",
    "title": "Class ResourceItem | TdxWebApiDocs",
    "summary": "Class ResourceItem Namespace Itsm.Tdx.WebApi.SharedModels Assembly Itsm.Tdx.WebApi.dll A single person, group, or account/department. public class ResourceItem Inheritance object ResourceItem Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties GroupId Extension for internal usage not an included property public string? GroupId { get; set; } Property Value string Initials The initials to be displayed if no profile image is specified for the resource. public string? Initials { get; set; } Property Value string ItemRole The role the resource has on the associated item. public string? ItemRole { get; set; } Property Value string Name The name of the resource. public required string Name { get; set; } Property Value string ProfileImageFileName The profile image file name of the resource. public string? ProfileImageFileName { get; set; } Property Value string RefValue The integer ID of the resource. public int RefValue { get; set; } Property Value int Value The value of the resource. public string? Value { get; set; } Property Value string"
  },
  "api/Itsm.Tdx.WebApi.SharedModels.html": {
    "href": "api/Itsm.Tdx.WebApi.SharedModels.html",
    "title": "Namespace Itsm.Tdx.WebApi.SharedModels | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.SharedModels Classes ResourceItem A single person, group, or account/department."
  },
  "api/Itsm.Tdx.WebApi.TdxBaseClient.html": {
    "href": "api/Itsm.Tdx.WebApi.TdxBaseClient.html",
    "title": "Class TdxBaseClient | TdxWebApiDocs",
    "summary": "Class TdxBaseClient Namespace Itsm.Tdx.WebApi Assembly Itsm.Tdx.WebApi.dll Base abstract client for interacting with the TeamDynamix API. Provides core HTTP communication features such as: Configurable HttpClient with base address setup. Retry policy handling for HTTP 429 (Too Many Requests) throttling responses. Token-based authorization header management. Generic request sending methods with built-in retry logic and deserialization. public abstract class TdxBaseClient Inheritance object TdxBaseClient Derived TdxClient Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This class serves as the foundation for more specific TeamDynamix API clients. It handles common concerns like retrying throttled requests, managing authentication tokens, and deserializing API responses into strongly-typed objects. Constructors TdxBaseClient(HttpClient, TdxClientOptions?) Initializes a new instance of TdxBaseClient with the given HttpClient and client options, creating the retry policy accordingly. protected TdxBaseClient(HttpClient httpClient, TdxClientOptions? options) Parameters httpClient HttpClient The HTTP client to use for requests. options TdxClientOptions Optional client configuration options. TdxBaseClient(HttpClient, string, TdxClientOptions?) Initializes a new instance of TdxBaseClient, setting the base URI if not already set on the provided HttpClient. protected TdxBaseClient(HttpClient httpClient, string tenant, TdxClientOptions? options) Parameters httpClient HttpClient The HTTP client to use for requests. tenant string The tenant identifier or base URL part used to build the API base URI if necessary. options TdxClientOptions Optional client configuration options. Fields HttpClient The underlying HttpClient used to send HTTP requests. protected readonly HttpClient HttpClient Field Value HttpClient RetryPolicy The retry policy used to handle throttling responses (HTTP 429) with backoff. protected readonly AsyncRetryPolicy<HttpResponseMessage> RetryPolicy Field Value AsyncRetryPolicy<HttpResponseMessage> TdxClientOptions The configuration options for this client instance. protected readonly TdxClientOptions TdxClientOptions Field Value TdxClientOptions Token The bearer token used for API authorization. Null if not authenticated. protected string? Token Field Value string Methods AddAuthorization(HttpRequestMessage) Adds the bearer token authorization header to the specified HTTP request if the token is set. protected void AddAuthorization(HttpRequestMessage request) Parameters request HttpRequestMessage The HTTP request message to add the authorization header to. BuildBaseUri(string, TdxClientOptions) Builds the base URI for API calls based on the tenant or explicit BaseApiUrl. protected static Uri BuildBaseUri(string tenant, TdxClientOptions options) Parameters tenant string The tenant name or base URL fragment. options TdxClientOptions Client options that may contain a full BaseApiUrl override. Returns Uri A Uri representing the API base address. Exceptions ArgumentException Thrown if both BaseApiUrl and tenant are null or whitespace. CreateRetryPolicy(TdxClientOptions) Creates a retry policy that handles HTTP 429 responses (rate limiting) with exponential backoff and optional throttle wait/continue callbacks. protected static AsyncRetryPolicy<HttpResponseMessage> CreateRetryPolicy(TdxClientOptions clientOptions) Parameters clientOptions TdxClientOptions The client options controlling retry behavior. Returns AsyncRetryPolicy<HttpResponseMessage> An AsyncRetryPolicy<TResult> configured to handle throttling. SendRequestAsync(HttpRequestMessage) Sends an HTTP request and returns the raw HttpResponseMessage. The request will be retried according to the retry policy if throttled. public Task<HttpResponseMessage> SendRequestAsync(HttpRequestMessage request) Parameters request HttpRequestMessage The HTTP request message to send. Returns Task<HttpResponseMessage> The HTTP response message. SendRequestAsync<T>(HttpRequestMessage) Sends an HTTP request, ensures success, and deserializes the JSON response content to the specified type T. public Task<T> SendRequestAsync<T>(HttpRequestMessage request) Parameters request HttpRequestMessage The HTTP request message to send. Returns Task<T> The deserialized response object of type T. Type Parameters T The type to deserialize the response content to. Exceptions InvalidOperationException Thrown if the response is unsuccessful, content is empty, or deserialization fails. SetToken(string) Sets the bearer token to use for authorization on subsequent requests. public void SetToken(string token) Parameters token string The bearer token string."
  },
  "api/Itsm.Tdx.WebApi.TdxClient.html": {
    "href": "api/Itsm.Tdx.WebApi.TdxClient.html",
    "title": "Class TdxClient | TdxWebApiDocs",
    "summary": "Class TdxClient Namespace Itsm.Tdx.WebApi Assembly Itsm.Tdx.WebApi.dll Client for interacting with the TeamDynamix API, extending TdxBaseClient. Provides strongly typed request builders for People, Tickets, and Accounts endpoints, and handles authentication using provided credentials. public class TdxClient : TdxBaseClient Inheritance object TdxBaseClient TdxClient Inherited Members TdxBaseClient.HttpClient TdxBaseClient.RetryPolicy TdxBaseClient.TdxClientOptions TdxBaseClient.Token TdxBaseClient.BuildBaseUri(string, TdxClientOptions) TdxBaseClient.CreateRetryPolicy(TdxClientOptions) TdxBaseClient.SetToken(string) TdxBaseClient.AddAuthorization(HttpRequestMessage) TdxBaseClient.SendRequestAsync(HttpRequestMessage) TdxBaseClient.SendRequestAsync<T>(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks Currently only supports admin login. This client abstracts API interaction details, managing authentication tokens, HTTP client configuration, and exposes high-level endpoint request builders. It supports multiple constructors for flexible configuration, including default options, fully custom options, or supplying a preconfigured HttpClient instance. Constructors TdxClient(HttpClient, string, string, string, TdxClientOptions?) Initializes a new instance of TdxClient using a supplied HttpClient. public TdxClient(HttpClient httpClient, string tenant, string webServicesBeId, string webServicesKey, TdxClientOptions? options = null) Parameters httpClient HttpClient A preconfigured HttpClient instance to use for requests. tenant string The tenant name or base URL for API access. webServicesBeId string The BEID credential for authentication. webServicesKey string The Web Services key credential for authentication. options TdxClientOptions Optional configuration settings for the client. Remarks Use this constructor to supply your own HttpClient instance, for example, one configured with custom message handlers, logging, or retry policies. If BaseAddress is not set, it will be inferred from the tenant and options. Exceptions ArgumentException Thrown if webServicesBeId or webServicesKey is null or empty. TdxClient(string, string, string) Initializes a new instance of TdxClient with default retry policy and no throttling callbacks. public TdxClient(string tenant, string webServicesBeId, string webServicesKey) Parameters tenant string The tenant name or base URL for API access. webServicesBeId string The BEID credential for authentication. webServicesKey string The Web Services key credential for authentication. Exceptions ArgumentException Thrown if webServicesBeId or webServicesKey is null or empty. TdxClient(string, string, string, TdxClientOptions) Initializes a new instance of TdxClient with full configuration options. public TdxClient(string tenant, string webServicesBeId, string webServicesKey, TdxClientOptions options) Parameters tenant string The tenant name or base URL for API access. webServicesBeId string The BEID credential for authentication. webServicesKey string The Web Services key credential for authentication. options TdxClientOptions Optional configuration settings for the client, such as retry policies. Exceptions ArgumentException Thrown if webServicesBeId or webServicesKey is null or empty. Properties Accounts Provides access to Accounts-related API requests. public AccountsRequestBuilder Accounts { get; } Property Value AccountsRequestBuilder People Provides access to People-related API requests. public PeopleRequestBuilder People { get; } Property Value PeopleRequestBuilder Methods AuthenticateAsync() Authenticates the client by sending the BEID and WebServicesKey to the authentication endpoint and storing the returned token for subsequent API requests. public Task AuthenticateAsync() Returns Task A Task representing the asynchronous operation. Exceptions ArgumentException Thrown if the authentication token cannot be retrieved or is empty. Tickets(string) Provides access to Tickets-related API requests for a specified application ID. public TicketsRequestBuilder Tickets(string appId) Parameters appId string The application ID used to scope ticket requests. Returns TicketsRequestBuilder A TicketsRequestBuilder instance for the specified appId."
  },
  "api/Itsm.Tdx.WebApi.TdxClientFactory.html": {
    "href": "api/Itsm.Tdx.WebApi.TdxClientFactory.html",
    "title": "Class TdxClientFactory | TdxWebApiDocs",
    "summary": "Class TdxClientFactory Namespace Itsm.Tdx.WebApi Assembly Itsm.Tdx.WebApi.dll Factory for creating HttpClient instances with advanced control over the message handler pipeline. public static class TdxClientFactory Inheritance object TdxClientFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Remarks This factory allows consumers to compose a customized HttpClient by chaining any number of DelegatingHandler instances such as logging, authentication, retry policies, or telemetry. By providing a collection of handlers, the factory builds a pipeline that executes handlers in the specified order, enabling flexible, reusable, and testable HTTP communication tailored to specific needs. Use this factory when the default HttpClient behavior is insufficient or when custom cross-cutting concerns need to be injected into the HTTP request/response pipeline. Methods CreateHttpClient(IEnumerable<DelegatingHandler>, string, HttpMessageHandler?) Creates a new HttpClient instance configured with a pipeline of DelegatingHandler instances. public static HttpClient CreateHttpClient(IEnumerable<DelegatingHandler> handlers, string tenantOrUrl, HttpMessageHandler? rootHandler = null) Parameters handlers IEnumerable<DelegatingHandler> A collection of DelegatingHandler instances to be chained together in the order provided. These handlers can implement cross-cutting concerns like logging, retry, or authentication. tenantOrUrl string The base URI for the HttpClient. This can be a full URI string, or a tenant identifier which will be used to construct a standard TeamDynamix API URL. rootHandler HttpMessageHandler An optional root HttpMessageHandler to terminate the pipeline. If null, the default HttpClientHandler is used. Returns HttpClient A new HttpClient instance with the specified handler pipeline and base address."
  },
  "api/Itsm.Tdx.WebApi.Tickets.Models.ConflictType.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Models.ConflictType.html",
    "title": "Enum ConflictType | TdxWebApiDocs",
    "summary": "Enum ConflictType Namespace Itsm.Tdx.WebApi.Tickets.Models Assembly Itsm.Tdx.WebApi.dll Describes the different types of conflicts that can be detected for a scheduled maintenance activity for a CI. [Flags] public enum ConflictType Fields DuringBlackoutWindow = 2 Indicates that an activity takes place during a blackout window. ExistingActivity = 4 Indicates that an activity conflicts with a pre-existing activity scheduled for the CI. ExistingChildActivity = 16 Indicates that an activity conflicts with a pre-existing activity on one of the CI's operational children. ExistingParentActivity = 32 Indicates that an activity conflicts with a pre-existing activity on one of the CI's operational parents. None = 0 Indicates that no conflicts were detected. OutsideChildMaintenanceWindow = 8 Indicates that an activity takes place outside the maintenance window of one or more of the CI's operational children. OutsideMaintenanceWindow = 1 Indicates that an activity takes place outside of the CI's maintenance window. Remarks This is an enumeration that can be treated as a bit field (i.e. a series of flags), and thus the fields can be combined."
  },
  "api/Itsm.Tdx.WebApi.Tickets.Models.StatusClass.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Models.StatusClass.html",
    "title": "Enum StatusClass | TdxWebApiDocs",
    "summary": "Enum StatusClass Namespace Itsm.Tdx.WebApi.Tickets.Models Assembly Itsm.Tdx.WebApi.dll Describes the different classes of statuses. public enum StatusClass Fields Cancelled = 4 Used for items that are cancelled. Completed = 3 Used for statuses that indicate completion such as \"Closed\" or \"Closed and Approved\". InProcess = 2 Used for statuses that are somewhere in the pipeline, but not yet completed. New = 1 Used for new statuses. None = 0 Used when a status class could not be determined. Should not be used in normal operations. OnHold = 5 Used for items that are on hold. Requested = 6 Used for items that have been requested and not yet assigned a status."
  },
  "api/Itsm.Tdx.WebApi.Tickets.Models.Ticket.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Models.Ticket.html",
    "title": "Class Ticket | TdxWebApiDocs",
    "summary": "Class Ticket Namespace Itsm.Tdx.WebApi.Tickets.Models Assembly Itsm.Tdx.WebApi.dll Represents a ticket with all associated details in TeamDynamix. public class Ticket Inheritance object Ticket Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AccountId The ID of the account/department associated with the ticket. [JsonProperty(\"AccountID\")] public int AccountId { get; set; } Property Value int AccountName The name of the account/department associated with the ticket. [JsonProperty(\"AccountName\")] public string AccountName { get; set; } Property Value string ActualMinutes The time, in minutes, entered against the ticket or associated tasks/activities. [JsonProperty(\"ActualMinutes\")] public int ActualMinutes { get; set; } Property Value int AppId The ID of the ticketing application associated with the ticket. [JsonProperty(\"AppID\")] public int AppId { get; set; } Property Value int ArticleAppId The ID of the client portal application associated with the ticket's Knowledge Base article. [JsonProperty(\"ArticleAppID\")] public int ArticleAppId { get; set; } Property Value int ArticleCategoryPathNames A delimited string of the category hierarchy associated with the ticket's Knowledge Base article. [JsonProperty(\"ArticleCategoryPathNames\")] public string ArticleCategoryPathNames { get; set; } Property Value string ArticleId The ID of the Knowledge Base article associated with the ticket. [JsonProperty(\"ArticleID\")] public int ArticleId { get; set; } Property Value int ArticleShortcutId The ID of the shortcut that is used when viewing the ticket's Knowledge Base article. This is set when the ticket is associated with a cross client portal article shortcut. Nullable. [JsonProperty(\"ArticleShortcutID\")] public int? ArticleShortcutId { get; set; } Property Value int? ArticleStatus The ID of the Knowledge Base article associated with the ticket. [JsonProperty(\"ArticleStatus\")] public ArticleStatus ArticleStatus { get; set; } Property Value ArticleStatus ArticleSubject The subject of the Knowledge Base article associated with the ticket. [JsonProperty(\"ArticleSubject\")] public string ArticleSubject { get; set; } Property Value string Attachments The attachments associated with the ticket. Nullable. [JsonProperty(\"Attachments\")] public List<Attachment>? Attachments { get; set; } Property Value List<Attachment> Attributes The custom attributes associated with the ticket. Nullable. [JsonProperty(\"Attributes\")] public List<CustomAttribute>? Attributes { get; set; } Property Value List<CustomAttribute> Classification The classification associated with the ticket. [JsonProperty(\"Classification\")] public TicketClass Classification { get; set; } Property Value TicketClass ClassificationName The application-defined name of the classification associated with the ticket. [JsonProperty(\"ClassificationName\")] public string ClassificationName { get; set; } Property Value string CompletedDate The completed/closed date of the ticket. [JsonProperty(\"CompletedDate\")] public DateTime CompletedDate { get; set; } Property Value DateTime CompletedFullName The full name of the user who completed/closed the ticket. [JsonProperty(\"CompletedFullName\")] public string CompletedFullName { get; set; } Property Value string CompletedUid The UID of the user who completed/closed the ticket. Nullable because it may not be provided. [JsonProperty(\"CompletedUid\")] public string? CompletedUid { get; set; } Property Value string ConvertedToTaskDate The date the ticket was converted to a project task. [JsonProperty(\"ConvertedToTaskDate\")] public DateTime ConvertedToTaskDate { get; set; } Property Value DateTime ConvertedToTaskFullName The full name of the user who converted the ticket to a project task. [JsonProperty(\"ConvertedToTaskFullName\")] public string ConvertedToTaskFullName { get; set; } Property Value string ConvertedToTaskUid The UID of the user who converted the ticket to a project task. Nullable because it may not be provided. [JsonProperty(\"ConvertedToTaskUid\")] public string? ConvertedToTaskUid { get; set; } Property Value string CreatedDate The created date of the ticket. [JsonProperty(\"CreatedDate\")] public DateTime CreatedDate { get; set; } Property Value DateTime CreatedEmail The email address of the user who created the ticket. [JsonProperty(\"CreatedEmail\")] public string CreatedEmail { get; set; } Property Value string CreatedFullName The full name of the user who created the ticket. [JsonProperty(\"CreatedFullName\")] public string CreatedFullName { get; set; } Property Value string CreatedUid The UID of the user who created the ticket. [JsonProperty(\"CreatedUid\")] public string? CreatedUid { get; set; } Property Value string DaysOld The age of the ticket, in days. [JsonProperty(\"DaysOld\")] public int DaysOld { get; set; } Property Value int Description The description of the ticket. [JsonProperty(\"Description\")] public string? Description { get; set; } Property Value string EndDate The end date of the ticket. Nullable because it may not be provided. [JsonProperty(\"EndDate\")] public DateTime? EndDate { get; set; } Property Value DateTime? EstimatedMinutes The estimated minutes of the ticket. [JsonProperty(\"EstimatedMinutes\")] public int EstimatedMinutes { get; set; } Property Value int ExpensesBudget The expense budget of the ticket. [JsonProperty(\"ExpensesBudget\")] public double ExpensesBudget { get; set; } Property Value double ExpensesBudgetUsed The used expense budget of the ticket. [JsonProperty(\"ExpensesBudgetUsed\")] public double ExpensesBudgetUsed { get; set; } Property Value double FormId The ID of the form associated with the ticket. [JsonProperty(\"FormID\")] public int FormId { get; set; } Property Value int FormName The name of the form associated with the ticket. [JsonProperty(\"FormName\")] public string FormName { get; set; } Property Value string GoesOffHoldDate The date the ticket goes off hold. [JsonProperty(\"GoesOffHoldDate\")] public DateTime? GoesOffHoldDate { get; set; } Property Value DateTime? Id The ID of the ticket. [JsonProperty(\"ID\")] public int Id { get; set; } Property Value int ImpactId The ID of the impact associated with the ticket. [JsonProperty(\"ImpactID\")] public int ImpactId { get; set; } Property Value int ImpactName The name of the impact associated with the ticket. [JsonProperty(\"ImpactName\")] public string ImpactName { get; set; } Property Value string IsConvertedToTask Whether the ticket has been converted to a project task. [JsonProperty(\"IsConvertedToTask\")] public bool IsConvertedToTask { get; set; } Property Value bool IsOnHold The on hold status of the ticket. [JsonProperty(\"IsOnHold\")] public bool IsOnHold { get; set; } Property Value bool IsRichHtml Indicates if the ticket description is rich-text or plain-text. [JsonProperty(\"IsRichHtml\")] public bool IsRichHtml { get; set; } Property Value bool IsSlaResolveByViolated Whether the Service Level Agreement (SLA) associated with the ticket has its \"Resolve By\" component violated. [JsonProperty(\"IsSlaResolveByViolated\")] public bool? IsSlaResolveByViolated { get; set; } Property Value bool? IsSlaRespondByViolated Whether the Service Level Agreement (SLA) associated with the ticket has its \"Respond By\" component violated. [JsonProperty(\"IsSlaRespondByViolated\")] public bool? IsSlaRespondByViolated { get; set; } Property Value bool? IsSlaViolated Whether the Service Level Agreement (SLA) associated with the ticket has been violated. [JsonProperty(\"IsSlaViolated\")] public bool IsSlaViolated { get; set; } Property Value bool LocationId The ID of the location associated with the ticket. [JsonProperty(\"LocationID\")] public int LocationId { get; set; } Property Value int LocationName The name of the location associated with the ticket. [JsonProperty(\"LocationName\")] public string LocationName { get; set; } Property Value string LocationRoomId The ID of the location room associated with the ticket. [JsonProperty(\"LocationRoomID\")] public int LocationRoomId { get; set; } Property Value int LocationRoomName The name of the location room associated with the ticket. [JsonProperty(\"LocationRoomName\")] public string LocationRoomName { get; set; } Property Value string ModifiedDate The last modified date of the ticket. [JsonProperty(\"ModifiedDate\")] public DateTime ModifiedDate { get; set; } Property Value DateTime ModifiedFullName The full name of the user who last modified the ticket. [JsonProperty(\"ModifiedFullName\")] public string ModifiedFullName { get; set; } Property Value string ModifiedUid The UID of the user who last modified the ticket. [JsonProperty(\"ModifiedUid\")] public string? ModifiedUid { get; set; } Property Value string Notify The list of people who can be notified for the ticket. Nullable. [JsonProperty(\"Notify\")] public List<ResourceItem>? Notify { get; set; } Property Value List<ResourceItem> ParentClass The classification of the parent associated with the ticket. [JsonProperty(\"ParentClass\")] public TicketClass ParentClass { get; set; } Property Value TicketClass ParentId The ID of the parent associated with the ticket. [JsonProperty(\"ParentID\")] public int ParentId { get; set; } Property Value int ParentTitle The title of the parent associated with the ticket. [JsonProperty(\"ParentTitle\")] public string ParentTitle { get; set; } Property Value string PlacedOnHoldDate The date the ticket was placed on hold. [JsonProperty(\"PlacedOnHoldDate\")] public DateTime? PlacedOnHoldDate { get; set; } Property Value DateTime? PriorityId The ID of the priority associated with the ticket. [JsonProperty(\"PriorityID\")] public int PriorityId { get; set; } Property Value int PriorityName The name of the priority associated with the ticket. [JsonProperty(\"PriorityName\")] public string PriorityName { get; set; } Property Value string PriorityOrder The order of the priority associated with the ticket. [JsonProperty(\"PriorityOrder\")] public double PriorityOrder { get; set; } Property Value double RefCode The reference code of the ticket. [JsonProperty(\"RefCode\")] public string RefCode { get; set; } Property Value string RequestorEmail The email address of the requestor associated with the ticket. [JsonProperty(\"RequestorEmail\")] public string RequestorEmail { get; set; } Property Value string RequestorFirstName The first name of the requestor associated with the ticket. [JsonProperty(\"RequestorFirstName\")] public string RequestorFirstName { get; set; } Property Value string RequestorLastName The last name of the requestor associated with the ticket. [JsonProperty(\"RequestorLastName\")] public string RequestorLastName { get; set; } Property Value string RequestorName The full name of the requestor associated with the ticket. [JsonProperty(\"RequestorName\")] public string RequestorName { get; set; } Property Value string RequestorPhone The phone number of the requestor associated with the ticket. [JsonProperty(\"RequestorPhone\")] public string RequestorPhone { get; set; } Property Value string RequestorUid The UID of the requestor associated with the ticket. Nullable because it may not be provided in some cases. [JsonProperty(\"RequestorUID\")] public string? RequestorUid { get; set; } Property Value string ResolveByDate The \"Resolve By\" deadline of the Service Level Agreement (SLA) associated with the ticket. [JsonProperty(\"ResolveByDate\")] public DateTime? ResolveByDate { get; set; } Property Value DateTime? RespondByDate The \"Respond By\" deadline of the Service Level Agreement (SLA) associated with the ticket. [JsonProperty(\"RespondByDate\")] public DateTime? RespondByDate { get; set; } Property Value DateTime? RespondedDate The date the ticket was responded to. [JsonProperty(\"RespondedDate\")] public DateTime RespondedDate { get; set; } Property Value DateTime RespondedFullName The full name of the user who responded to the ticket. [JsonProperty(\"RespondedFullName\")] public string RespondedFullName { get; set; } Property Value string RespondedUid The UID of the user who responded to the ticket. Nullable because it may not be provided. [JsonProperty(\"RespondedUid\")] public string? RespondedUid { get; set; } Property Value string ResponsibleEmail The email address of the responsible user associated with the ticket. [JsonProperty(\"ResponsibleEmail\")] public string ResponsibleEmail { get; set; } Property Value string ResponsibleFullName The full name of the responsible user associated with the ticket. [JsonProperty(\"ResponsibleFullName\")] public string ResponsibleFullName { get; set; } Property Value string ResponsibleGroupId The ID of the responsible group associated with the ticket. [JsonProperty(\"ResponsibleGroupID\")] public int ResponsibleGroupId { get; set; } Property Value int ResponsibleGroupName The name of the responsible group associated with the ticket. [JsonProperty(\"ResponsibleGroupName\")] public string ResponsibleGroupName { get; set; } Property Value string ResponsibleUid The UID of the responsible user associated with the ticket. Nullable because it may not be provided. [JsonProperty(\"ResponsibleUid\")] public string? ResponsibleUid { get; set; } Property Value string ReviewerEmail The email address of the reviewing user associated with the ticket. [JsonProperty(\"ReviewerEmail\")] public string ReviewerEmail { get; set; } Property Value string ReviewerFullName The full name of the reviewing user associated with the ticket. [JsonProperty(\"ReviewerFullName\")] public string ReviewerFullName { get; set; } Property Value string ReviewerUid The UID of the reviewing user associated with the ticket. Nullable because it may not be provided. [JsonProperty(\"ReviewerUid\")] public string? ReviewerUid { get; set; } Property Value string ReviewingGroupId The ID of the reviewing group associated with the ticket. [JsonProperty(\"ReviewingGroupID\")] public int ReviewingGroupId { get; set; } Property Value int ReviewingGroupName The name of the reviewing group associated with the ticket. [JsonProperty(\"ReviewingGroupName\")] public string ReviewingGroupName { get; set; } Property Value string ServiceCategoryId The ID of the category associated with the ticket's service. [JsonProperty(\"ServiceCategoryID\")] public int ServiceCategoryId { get; set; } Property Value int ServiceCategoryName The name of the category associated with the ticket's service. [JsonProperty(\"ServiceCategoryName\")] public string ServiceCategoryName { get; set; } Property Value string ServiceId The ID of the service associated with the ticket. [JsonProperty(\"ServiceID\")] public int ServiceId { get; set; } Property Value int ServiceName The name of the service associated with the ticket. [JsonProperty(\"ServiceName\")] public string ServiceName { get; set; } Property Value string ServiceOfferingId The ID of the service offering associated with the ticket. [JsonProperty(\"ServiceOfferingID\")] public int ServiceOfferingId { get; set; } Property Value int ServiceOfferingName The name of the service offering associated with the ticket. [JsonProperty(\"ServiceOfferingName\")] public string ServiceOfferingName { get; set; } Property Value string SlaBeginDate The date the Service Level Agreement (SLA) associated with the ticket was started. [JsonProperty(\"SlaBeginDate\")] public DateTime? SlaBeginDate { get; set; } Property Value DateTime? SlaId The ID of the Service Level Agreement (SLA) associated with the ticket. [JsonProperty(\"SlaID\")] public int SlaId { get; set; } Property Value int SlaName The name of the Service Level Agreement (SLA) associated with the ticket. [JsonProperty(\"SlaName\")] public string SlaName { get; set; } Property Value string SourceId The ID of the ticket source associated with the ticket. [JsonProperty(\"SourceID\")] public int SourceId { get; set; } Property Value int SourceName The name of the ticket source associated with the ticket. [JsonProperty(\"SourceName\")] public string SourceName { get; set; } Property Value string StartDate The start date of the ticket. Nullable because it may not be provided. [JsonProperty(\"StartDate\")] public DateTime? StartDate { get; set; } Property Value DateTime? StatusClass The class of the ticket status associated with the ticket. [JsonProperty(\"StatusClass\")] public StatusClass StatusClass { get; set; } Property Value StatusClass StatusId The ID of the ticket status associated with the ticket. [JsonProperty(\"StatusID\")] public int StatusId { get; set; } Property Value int StatusName The name of the ticket status associated with the ticket. [JsonProperty(\"StatusName\")] public string StatusName { get; set; } Property Value string TaskEndDate The end date of the associated project task when the ticket has been converted to a project task. [JsonProperty(\"TaskEndDate\")] public DateTime TaskEndDate { get; set; } Property Value DateTime TaskId The ID of the associated project task when the ticket has been converted to a project task. [JsonProperty(\"TaskID\")] public int TaskId { get; set; } Property Value int TaskPercentComplete The percent complete of the associated project task when the ticket has been converted to a project task. [JsonProperty(\"TaskPercentComplete\")] public int TaskPercentComplete { get; set; } Property Value int TaskPlanId The ID of the associated project plan when the ticket has been converted to a project task. [JsonProperty(\"TaskPlanID\")] public int TaskPlanId { get; set; } Property Value int TaskPlanName The name of the associated project plan when the ticket has been converted to a project task. [JsonProperty(\"TaskPlanName\")] public string TaskPlanName { get; set; } Property Value string TaskProjectId The ID of the associated project when the ticket has been converted to a project task. [JsonProperty(\"TaskProjectID\")] public int TaskProjectId { get; set; } Property Value int TaskProjectName The name of the associated project when the ticket has been converted to a project task. [JsonProperty(\"TaskProjectName\")] public string TaskProjectName { get; set; } Property Value string TaskStartDate The start date of the associated project task when the ticket has been converted to a project task. [JsonProperty(\"TaskStartDate\")] public DateTime TaskStartDate { get; set; } Property Value DateTime TaskTitle The title of the associated project task when the ticket has been converted to a project task. [JsonProperty(\"TaskTitle\")] public string TaskTitle { get; set; } Property Value string Tasks The ticket tasks associated with the ticket. Nullable. [JsonProperty(\"Tasks\")] public List<TicketTask>? Tasks { get; set; } Property Value List<TicketTask> TimeBudget The time budget of the ticket. [JsonProperty(\"TimeBudget\")] public double TimeBudget { get; set; } Property Value double TimeBudgetUsed The used time budget of the ticket. [JsonProperty(\"TimeBudgetUsed\")] public double TimeBudgetUsed { get; set; } Property Value double Title The title of the ticket. [JsonProperty(\"Title\")] public string Title { get; set; } Property Value string TypeCategoryId The ID of the category associated with the ticket's type. [JsonProperty(\"TypeCategoryID\")] public int TypeCategoryId { get; set; } Property Value int TypeCategoryName The name of the category associated with the ticket's type. [JsonProperty(\"TypeCategoryName\")] public string TypeCategoryName { get; set; } Property Value string TypeId The ID of the ticket type associated with the ticket. [JsonProperty(\"TypeID\")] public int TypeId { get; set; } Property Value int TypeName The name of the ticket type associated with the ticket. [JsonProperty(\"TypeName\")] public string TypeName { get; set; } Property Value string UrgencyId The ID of the urgency associated with the ticket. [JsonProperty(\"UrgencyID\")] public int UrgencyId { get; set; } Property Value int UrgencyName The name of the urgency associated with the ticket. [JsonProperty(\"UrgencyName\")] public string UrgencyName { get; set; } Property Value string Uri The URI to retrieve the full details of the ticket via the web API. [JsonProperty(\"Uri\")] public string Uri { get; set; } Property Value string WorkflowConfigurationId The ID of the configuration workflow associated with the ticket. [JsonProperty(\"WorkflowConfigurationID\")] public int WorkflowConfigurationId { get; set; } Property Value int WorkflowId The ID of the workflow associated with the ticket. [JsonProperty(\"WorkflowID\")] public int WorkflowId { get; set; } Property Value int WorkflowName The name of the workflow associated with the ticket. Nullable. [JsonProperty(\"WorkflowName\")] public string? WorkflowName { get; set; } Property Value string"
  },
  "api/Itsm.Tdx.WebApi.Tickets.Models.TicketClass.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Models.TicketClass.html",
    "title": "Enum TicketClass | TdxWebApiDocs",
    "summary": "Enum TicketClass Namespace Itsm.Tdx.WebApi.Tickets.Models Assembly Itsm.Tdx.WebApi.dll Describes the different classifications of tickets. public enum TicketClass Fields Change = 34 A change. Incident = 32 An incident. MajorIncident = 77 A major incident. None = 0 An unknown or indeterminate type of ticket. Problem = 33 A problem. Release = 35 A release. ServiceRequest = 46 A service request. Ticket = 9 An \"all tickets\" classification for filtering purposes. Tickets should not be created or edited with this class. TicketTemplate = 36 A ticket template. Tickets should not be created or edited with this class."
  },
  "api/Itsm.Tdx.WebApi.Tickets.Models.TicketTask.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Models.TicketTask.html",
    "title": "Class TicketTask | TdxWebApiDocs",
    "summary": "Class TicketTask Namespace Itsm.Tdx.WebApi.Tickets.Models Assembly Itsm.Tdx.WebApi.dll A ticket task or activity. public class TicketTask Inheritance object TicketTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties ActualMinutes The time, in minutes, entered against the task. [JsonProperty(\"ActualMinutes\")] public int ActualMinutes { get; set; } Property Value int CompleteWithinMinutes The expected duration, in operational minutes, of the task. [JsonProperty(\"CompleteWithinMinutes\")] public int? CompleteWithinMinutes { get; set; } Property Value int? CompletedDate The completed date of the task. [JsonProperty(\"CompletedDate\")] public DateTime CompletedDate { get; set; } Property Value DateTime CompletedFullName The full name of the user who completed the task. [JsonProperty(\"CompletedFullName\")] public string CompletedFullName { get; set; } Property Value string CompletedUid The UID of the user who completed the task. [JsonProperty(\"CompletedUID\")] public Guid? CompletedUid { get; set; } Property Value Guid? CreatedDate The created date of the task. [JsonProperty(\"CreatedDate\")] public DateTime CreatedDate { get; set; } Property Value DateTime CreatedEmail The email address of the user who created the task. [JsonProperty(\"CreatedEmail\")] public string CreatedEmail { get; set; } Property Value string CreatedFullName The full name of the user who created the task. [JsonProperty(\"CreatedFullName\")] public string CreatedFullName { get; set; } Property Value string CreatedUid The UID of the user who created the task. [JsonProperty(\"CreatedUid\")] public Guid CreatedUid { get; set; } Property Value Guid Description The description of the task. [JsonProperty(\"Description\")] public string? Description { get; set; } Property Value string DetectedConflictCount The number of detected conflicts for this task. [JsonProperty(\"DetectedConflictCount\")] public int DetectedConflictCount { get; set; } Property Value int DetectedConflictTypes The type of detected conflicts for this task. [JsonProperty(\"DetectedConflictTypes\")] public ConflictType DetectedConflictTypes { get; set; } Property Value ConflictType EndDate The end date of the task. [JsonProperty(\"EndDate\")] public DateTime? EndDate { get; set; } Property Value DateTime? EstimatedMinutes The estimated minutes of the task. [JsonProperty(\"EstimatedMinutes\")] public int EstimatedMinutes { get; set; } Property Value int Id The ID of the task. [JsonProperty(\"ID\")] public int Id { get; set; } Property Value int IsActive The active status of the ticket task. [JsonProperty(\"IsActive\")] public bool IsActive { get; set; } Property Value bool LastConflictScanDateUtc The date the task was last scanned for conflicts. [JsonProperty(\"LastConflictScanDateUtc\")] public DateTime LastConflictScanDateUtc { get; set; } Property Value DateTime ModifiedDate The last modified date of the task. [JsonProperty(\"ModifiedDate\")] public DateTime ModifiedDate { get; set; } Property Value DateTime ModifiedFullName The full name of the user who last modified the task. [JsonProperty(\"ModifiedFullName\")] public string ModifiedFullName { get; set; } Property Value string ModifiedUid The UID of the user who last modified the task. [JsonProperty(\"ModifiedUID\")] public Guid ModifiedUid { get; set; } Property Value Guid NotifyResponsible Whether to notify responsible party. Defaults to true. [JsonProperty(\"NotifyResponsible\")] public bool NotifyResponsible { get; set; } Property Value bool Order The order in which the task should be displayed in the list of the ticket's tasks/activities. [JsonProperty(\"Order\")] public int Order { get; set; } Property Value int PercentComplete The percent complete of the task. [JsonProperty(\"PercentComplete\")] public int PercentComplete { get; set; } Property Value int PredecessorId The ID of the predecessor associated with the task. [JsonProperty(\"PredecessorID\")] public int PredecessorId { get; set; } Property Value int PredecessorTitle The title of the predecessor associated with the task. [JsonProperty(\"PredecessorTitle\")] public string PredecessorTitle { get; set; } Property Value string ResponsibleEmail The email address of the user responsible for the task. [JsonProperty(\"ResponsibleEmail\")] public string ResponsibleEmail { get; set; } Property Value string ResponsibleFullName The full name of the user responsible for the task. [JsonProperty(\"ResponsibleFullName\")] public string ResponsibleFullName { get; set; } Property Value string ResponsibleGroupId The ID of the group responsible for the task. [JsonProperty(\"ResponsibleGroupID\")] public int ResponsibleGroupId { get; set; } Property Value int ResponsibleGroupName The name of the group responsible for the task. [JsonProperty(\"ResponsibleGroupName\")] public string ResponsibleGroupName { get; set; } Property Value string ResponsibleUid The UID of the user responsible for the task. [JsonProperty(\"ResponsibleUID\")] public Guid? ResponsibleUid { get; set; } Property Value Guid? StartDate The start date of the task. [JsonProperty(\"StartDate\")] public DateTime? StartDate { get; set; } Property Value DateTime? TicketId The ID of the ticket associated with the task. [JsonProperty(\"TicketID\")] public int TicketId { get; set; } Property Value int Title The title of the task. [JsonProperty(\"Title\")] public string Title { get; set; } Property Value string TypeId The type ID of the task. [JsonProperty(\"TypeID\")] public TicketTaskType TypeId { get; set; } Property Value TicketTaskType Uri The URI to retrieve the full details of the ticket task via the web API. [JsonProperty(\"Uri\")] public string Uri { get; set; } Property Value string"
  },
  "api/Itsm.Tdx.WebApi.Tickets.Models.TicketTaskType.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Models.TicketTaskType.html",
    "title": "Enum TicketTaskType | TdxWebApiDocs",
    "summary": "Enum TicketTaskType Namespace Itsm.Tdx.WebApi.Tickets.Models Assembly Itsm.Tdx.WebApi.dll Describes the different types of items that can be backended by ticket tasks. public enum TicketTaskType Fields MaintenanceActivity = 2 A scheduled maintenance activity. None = 0 An unknown or indeterminate type of task. TicketTask = 1 A standard, workable ticket task. WorkflowTask = 3 A task that is used as a work step in a workflow."
  },
  "api/Itsm.Tdx.WebApi.Tickets.Models.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Models.html",
    "title": "Namespace Itsm.Tdx.WebApi.Tickets.Models | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Tickets.Models Classes Ticket Represents a ticket with all associated details in TeamDynamix. TicketTask A ticket task or activity. Enums ConflictType Describes the different types of conflicts that can be detected for a scheduled maintenance activity for a CI. StatusClass Describes the different classes of statuses. TicketClass Describes the different classifications of tickets. TicketTaskType Describes the different types of items that can be backended by ticket tasks."
  },
  "api/Itsm.Tdx.WebApi.Tickets.Options.TicketCreateOptions.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Options.TicketCreateOptions.html",
    "title": "Class TicketCreateOptions | TdxWebApiDocs",
    "summary": "Class TicketCreateOptions Namespace Itsm.Tdx.WebApi.Tickets.Options Assembly Itsm.Tdx.WebApi.dll Represents optional parameters that can be applied when creating a ticket via the TeamDynamix API. These options are serialized into query string parameters. public class TicketCreateOptions Inheritance object TicketCreateOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties AllowRequestorCreation Gets or sets a value indicating whether to allow creation of the requestor if they do not already exist. public bool AllowRequestorCreation { get; set; } Property Value bool ApplyDefaults Gets or sets a value indicating whether to apply default values to the ticket. public bool ApplyDefaults { get; set; } Property Value bool EnableNotifyReviewer Gets or sets a value indicating whether to enable notifications to the reviewer. public bool EnableNotifyReviewer { get; set; } Property Value bool NotifyRequestor Gets or sets a value indicating whether to notify the requestor. public bool NotifyRequestor { get; set; } Property Value bool NotifyResponsible Gets or sets a value indicating whether to notify the person responsible for the ticket. public bool NotifyResponsible { get; set; } Property Value bool PreferRequestorAccountAndPriority Gets or sets a value indicating whether to prefer the requestor's account and priority over defaults. public bool PreferRequestorAccountAndPriority { get; set; } Property Value bool Methods ToQueryString() Converts the current options to a URL query string suitable for appending to an HTTP request. public string ToQueryString() Returns string A query string representation of the ticket creation options."
  },
  "api/Itsm.Tdx.WebApi.Tickets.Options.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.Options.html",
    "title": "Namespace Itsm.Tdx.WebApi.Tickets.Options | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Tickets.Options Classes TicketCreateOptions Represents optional parameters that can be applied when creating a ticket via the TeamDynamix API. These options are serialized into query string parameters."
  },
  "api/Itsm.Tdx.WebApi.Tickets.TicketCreateObjectRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.TicketCreateObjectRequestBuilder.html",
    "title": "Class TicketCreateObjectRequestBuilder | TdxWebApiDocs",
    "summary": "Class TicketCreateObjectRequestBuilder Namespace Itsm.Tdx.WebApi.Tickets Assembly Itsm.Tdx.WebApi.dll Provides a builder for creating tickets using a fully constructed Ticket object. public class TicketCreateObjectRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder TicketCreateObjectRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TicketCreateObjectRequestBuilder(string, TdxBaseClient, Ticket) Initializes a new instance of the TicketCreateObjectRequestBuilder class. public TicketCreateObjectRequestBuilder(string path, TdxBaseClient client, Ticket ticket) Parameters path string The API endpoint path. client TdxBaseClient The client used to send the request. ticket Ticket The ticket to be created. Methods PostAsync() Submits the ticket creation request and returns the created Ticket. public Task<Ticket> PostAsync() Returns Task<Ticket> WithOptions(Action<TicketCreateOptions>) Configures additional query parameters for the creation request. public TicketCreateObjectRequestBuilder WithOptions(Action<TicketCreateOptions> configure) Parameters configure Action<TicketCreateOptions> An action to configure TicketCreateOptions. Returns TicketCreateObjectRequestBuilder"
  },
  "api/Itsm.Tdx.WebApi.Tickets.TicketCreateRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.TicketCreateRequestBuilder.html",
    "title": "Class TicketCreateRequestBuilder | TdxWebApiDocs",
    "summary": "Class TicketCreateRequestBuilder Namespace Itsm.Tdx.WebApi.Tickets Assembly Itsm.Tdx.WebApi.dll Provides a fluent interface for constructing and submitting a new ticket using discrete fields. public class TicketCreateRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder TicketCreateRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TicketCreateRequestBuilder(string, TdxBaseClient) Initializes a new instance of the TicketCreateRequestBuilder class. public TicketCreateRequestBuilder(string path, TdxBaseClient client) Parameters path string The base path for the ticket creation API endpoint. client TdxBaseClient The API client used to make requests. Methods PostAsync() Submits the ticket creation request and returns the created Ticket. public Task<Ticket> PostAsync() Returns Task<Ticket> ValidateRequiredFields() Validates that all required fields for ticket creation are present. public void ValidateRequiredFields() Exceptions InvalidOperationException Thrown when a required field is missing. WithAccountId(string) Sets the account ID associated with the ticket. public TicketCreateRequestBuilder WithAccountId(string accountId) Parameters accountId string Returns TicketCreateRequestBuilder WithDescription(string) Sets the description for the ticket. public TicketCreateRequestBuilder WithDescription(string description) Parameters description string Returns TicketCreateRequestBuilder WithOptions(Action<TicketCreateOptions>) Applies additional options for the ticket creation request. public TicketCreateRequestBuilder WithOptions(Action<TicketCreateOptions> configure) Parameters configure Action<TicketCreateOptions> An action to configure the TicketCreateOptions. Returns TicketCreateRequestBuilder WithPriority(string) Sets the priority ID of the ticket. public TicketCreateRequestBuilder WithPriority(string priorityId) Parameters priorityId string Returns TicketCreateRequestBuilder WithRequestor(string) Sets the UID of the requestor. public TicketCreateRequestBuilder WithRequestor(string uid) Parameters uid string Returns TicketCreateRequestBuilder WithResponsible(string) Sets the UID of the responsible person. public TicketCreateRequestBuilder WithResponsible(string uid) Parameters uid string Returns TicketCreateRequestBuilder WithStatusId(string) Sets the status ID of the ticket. public TicketCreateRequestBuilder WithStatusId(string statusID) Parameters statusID string Returns TicketCreateRequestBuilder WithTitle(string) Sets the title of the ticket. public TicketCreateRequestBuilder WithTitle(string title) Parameters title string Returns TicketCreateRequestBuilder WithTypeId(string) Sets the type ID of the ticket. public TicketCreateRequestBuilder WithTypeId(string typeId) Parameters typeId string Returns TicketCreateRequestBuilder"
  },
  "api/Itsm.Tdx.WebApi.Tickets.TicketItemRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.TicketItemRequestBuilder.html",
    "title": "Class TicketItemRequestBuilder | TdxWebApiDocs",
    "summary": "Class TicketItemRequestBuilder Namespace Itsm.Tdx.WebApi.Tickets Assembly Itsm.Tdx.WebApi.dll Provides operations to retrieve a specific ticket by ID. public class TicketItemRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder TicketItemRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TicketItemRequestBuilder(string, TdxBaseClient) Initializes a new instance of the TicketItemRequestBuilder class. public TicketItemRequestBuilder(string path, TdxBaseClient tdxBaseClient) Parameters path string The API path to the specific ticket. tdxBaseClient TdxBaseClient The client used to send requests. Methods GetAsync() Retrieves the ticket identified by the path. public Task<Ticket> GetAsync() Returns Task<Ticket> A Ticket object representing the ticket."
  },
  "api/Itsm.Tdx.WebApi.Tickets.TicketsRequestBuilder.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.TicketsRequestBuilder.html",
    "title": "Class TicketsRequestBuilder | TdxWebApiDocs",
    "summary": "Class TicketsRequestBuilder Namespace Itsm.Tdx.WebApi.Tickets Assembly Itsm.Tdx.WebApi.dll Provides operations to manage and create tickets within a specific ticketing application in the TeamDynamix platform. public class TicketsRequestBuilder : BaseRequestBuilder Inheritance object BaseRequestBuilder TicketsRequestBuilder Inherited Members BaseRequestBuilder.Client BaseRequestBuilder.Path BaseRequestBuilder.CreateRequest(HttpMethod, string, object) BaseRequestBuilder.SendAsync<T>(HttpRequestMessage) BaseRequestBuilder.SendAsync(HttpRequestMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors TicketsRequestBuilder(TdxBaseClient, string) Initializes a new instance of the TicketsRequestBuilder class. public TicketsRequestBuilder(TdxBaseClient client, string appId) Parameters client TdxBaseClient The TDX base client used to send HTTP requests. appId string The ID of the ticketing application. Exceptions ArgumentException Thrown if appId is null or empty. Properties AppId Gets the ID of the ticketing application associated with this request builder. public string AppId { get; } Property Value string this[string] Provides operations for a specific ticket by its ID. public TicketItemRequestBuilder this[string ticketId] { get; } Parameters ticketId string The ID of the ticket to manage. Property Value TicketItemRequestBuilder A TicketItemRequestBuilder for the specified ticket. Methods Create() Provides operations for creating new tickets using request parameters. public TicketCreateRequestBuilder Create() Returns TicketCreateRequestBuilder A TicketCreateRequestBuilder for ticket creation. Create(Ticket) Provides operations for creating a new ticket using a Ticket object. public TicketCreateObjectRequestBuilder Create(Ticket ticket) Parameters ticket Ticket The ticket to create. Returns TicketCreateObjectRequestBuilder A TicketCreateObjectRequestBuilder to execute the ticket creation."
  },
  "api/Itsm.Tdx.WebApi.Tickets.html": {
    "href": "api/Itsm.Tdx.WebApi.Tickets.html",
    "title": "Namespace Itsm.Tdx.WebApi.Tickets | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi.Tickets Classes TicketCreateObjectRequestBuilder Provides a builder for creating tickets using a fully constructed Ticket object. TicketCreateRequestBuilder Provides a fluent interface for constructing and submitting a new ticket using discrete fields. TicketItemRequestBuilder Provides operations to retrieve a specific ticket by ID. TicketsRequestBuilder Provides operations to manage and create tickets within a specific ticketing application in the TeamDynamix platform."
  },
  "api/Itsm.Tdx.WebApi.html": {
    "href": "api/Itsm.Tdx.WebApi.html",
    "title": "Namespace Itsm.Tdx.WebApi | TdxWebApiDocs",
    "summary": "Namespace Itsm.Tdx.WebApi Classes BaseRequestBuilder Abstract base class for building and sending HTTP requests to the TeamDynamix API. Provides helper methods to create requests with optional JSON bodies and send them using a TdxBaseClient instance. TdxBaseClient Base abstract client for interacting with the TeamDynamix API. Provides core HTTP communication features such as: Configurable HttpClient with base address setup. Retry policy handling for HTTP 429 (Too Many Requests) throttling responses. Token-based authorization header management. Generic request sending methods with built-in retry logic and deserialization. TdxClient Client for interacting with the TeamDynamix API, extending TdxBaseClient. Provides strongly typed request builders for People, Tickets, and Accounts endpoints, and handles authentication using provided credentials. TdxClientFactory Factory for creating HttpClient instances with advanced control over the message handler pipeline."
  },
  "docs/getting-started.html": {
    "href": "docs/getting-started.html",
    "title": "Getting Started | TdxWebApiDocs",
    "summary": "Getting Started"
  },
  "docs/introduction.html": {
    "href": "docs/introduction.html",
    "title": "Introduction | TdxWebApiDocs",
    "summary": "Introduction"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | TdxWebApiDocs",
    "summary": "This is the HOMEPAGE. Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  },
  "methods.html": {
    "href": "methods.html",
    "title": "API Structure | TdxWebApiDocs",
    "summary": "API Structure APIs Accounts Contains methods for working with accounts/departments. Applications Contains methods for working with user applications. Attachments Contains methods for working with attachments. Attributes Contains methods for working with custom attributes. Auth Contains methods for authentication. Days Off Contains methods for working with days off. Feed Contains methods for working with feed entries. Groups Contains methods for working with groups within the TeamDynamix people database. Industries Contains methods for working with account/department industries. Integrations Contains methods for working with integrations. Locations Contains methods for working with locations. People Contains methods for working with users and other individuals within the TeamDynamix people database. Time Contains methods for creating, reading, updating, and deleting time entries as well as methods for getting information about time accounts and time reports (weekly timesheets). Type Categories Contains methods for managing type categories, which are used to group project and ticket types. User Management Contains methods for performing bulk operations upon users and other individuals within the TeamDynamix people database. Asset/Configuration Management Asset Searches/Reports Contains methods for working with asset saved searches in an assets/CIs application. Asset Statuses Contains methods for working with asset statuses. Assets Contains methods for working with assets. Configuration Item Searches/Reports Contains methods for working with configuration saved searches in an assets/CIs application. Configuration Item Types Contains methods for working with configuration item types. Configuration Items Contains methods for working with configuration items and their relationships. Configuration Relationship Types Contains methods for working with configuration relationship types. Contracts Contains methods for working with contracts. Maintenance Windows Contains methods for working with maintenance windows. Product Models Contains methods for working with asset product models. Product Types Contains methods for working with asset product types. Vendors Contains methods for working with asset vendors. Projects Briefcase Files Contains methods for working with briefcase files. Briefcase Folders Contains methods for working with briefcase folders. Issues Contains methods for working with issues. Links Contains methods for working with links. Plans Contains methods for working with project plans. Project Templates Contains methods for working with project templates. Project Types Contains methods for working with project types. Projects Contains methods for working with projects. Risks Contains methods for working with risks. Tasks Contains methods for working with project tasks. Reporting Reports Contains methods for working with Report Builder reports. Roles Functional Roles Contains methods for working with functional roles. Resource Pools Contains methods for working with resource pools. Security Roles Contains methods for working with security roles. Self-Service Knowledge Base Contains methods for working with Knowledge Base articles and categories. Project Requests Contains methods for working with project requests. Service Catalog Contains methods for working with the service catalog. Tickets Blackout Windows Contains methods for working with blackout windows. Impacts Contains methods for working with ticket impacts. Maintenance Activities Contains methods for working with maintenance activities. Priorities Contains methods for working with ticket priorities. Sources Contains methods for working with ticket sources. Ticket Searches/Reports Contains methods for working with ticket saved searches in a ticketing application. Ticket Statuses Contains methods for working with ticket statuses. Ticket Tasks Contains methods for working with ticket tasks. Ticket Types Contains methods for working with ticket types. Tickets Contains methods for working with tickets. Urgencies Contains methods for working with ticket urgencies."
  },
  "readme.html": {
    "href": "readme.html",
    "title": "Team Dynamix Web Api SDK | TdxWebApiDocs",
    "summary": "Team Dynamix Web Api SDK A fluent, opinionated C# SDK for interacting with the TeamDynamix Web API. ✨ Features ✅ Fluent-style request builders ✅ Strongly typed models and builders ✅ Supports both basic and complex ticket operations ✅ Extensible and customizable ✅ Designed for testability and clean layering \uD83D\uDCE6 Installation Install via NuGet: dotnet add package TdxClient Or reference the project directly in your solution: <ProjectReference Include=\"..\\TdxClient\\TdxClient.csproj\" /> \uD83D\uDD27 Setup \uD83D\uDE80 Quick Start Option 1: Minimal Setup (Not Recommended for ASP.NET Core) var client = new TdxClient( tenant: \"mytenant\", webServicesBeId: \"abc123\", webServicesKey: \"super-secret-key\" ); await client.AuthenticateAsync(); var ticket = await client.Tickets(\"244\")[\"123456\"].GetAsync(); Option 2: Recommended Setup with IHttpClientFactory In Program.cs or Startup.cs: builder.Services.AddHttpClient<TdxClient>((provider, httpClient) => { // Optional: Add custom handlers, policies, etc. }) .ConfigurePrimaryHttpMessageHandler(() => new HttpClientHandler { AutomaticDecompression = DecompressionMethods.GZip | DecompressionMethods.Deflate }); Then register your config: builder.Services.AddSingleton(new TdxClientOptions { EnableThrottleCountdownLogging = true, OnThrottleWait = remaining => Console.WriteLine($\"Waiting {remaining.TotalSeconds} seconds due to rate limit...\"), OnThrottleContinue = () => Console.WriteLine(\"Continuing after wait.\") }); builder.Services.AddTransient<TdxClient>(provider => { var httpClient = provider.GetRequiredService<IHttpClientFactory>().CreateClient(nameof(TdxClient)); var options = provider.GetRequiredService<TdxClientOptions>(); return new TdxClient( httpClient, tenant: \"mytenant\", webServicesBeId: \"abc123\", webServicesKey: \"super-secret-key\", options ); }); Then inject it in your service: public class MyService { private readonly TdxClient _tdx; public MyService(TdxClient tdx) { _tdx = tdx; } public async Task RunAsync() { await _tdx.AuthenticateAsync(); var newTicket = new Ticket { Title = \"My New Ticket\", Description = \"Created via fluent API\", RequestorUid = Guid.Parse(\"...\"), StatusID = 1234, TypeID = 5678, AccountID = 9876, PriorityID = 1111 }; var created = await _tdx.Tickets(\"244\").Create(newTicket); } } Inject Your Own HttpClient With Custom DelegatingHandlers // Custom logging handler example public class LoggingHandler : DelegatingHandler { protected override async Task<HttpResponseMessage> SendAsync(HttpRequestMessage request, CancellationToken cancellationToken) { Console.WriteLine($\"Request: {request.Method} {request.RequestUri}\"); var response = await base.SendAsync(request, cancellationToken); Console.WriteLine($\"Response: {response.StatusCode}\"); return response; } } // Create a list of custom handlers var handlers = new List<DelegatingHandler> { new LoggingHandler() }; // Create HttpClient with custom handlers using the factory var httpClient = TdxClientFactory.CreateHttpClient(handlers, tenant); // Inject your HttpClient into TdxClient var client = new TdxClient(httpClient, tenant, beId, webServicesKey); // Authenticate and use await client.AuthenticateAsync(); var tickets = await client.Tickets(\"244\")[\"12345\"].GetAsync(); Advanced: Adding Multiple Handlers (Logging + Retry + Telemetry) var handlers = new List<DelegatingHandler> { new LoggingHandler(), new RetryHandler(), // Your custom retry handler if you have one new TelemetryHandler() // Your telemetry handler for metrics }; var httpClient = TdxClientFactory.CreateHttpClient(handlers, tenant); var client = new TdxClient(httpClient, tenant, beId, webServicesKey); await client.AuthenticateAsync(); // Now all requests go through the pipeline of your handlers var tickets = await client.Tickets(\"244\")[\"12345\"].GetAsync(); ⚠️ Not Recommended: Manual HttpClient Instantiation You will need to handle your own retry policies. // Use only for quick tests or console apps var httpClient = new HttpClient { BaseAddress = new Uri(\"https://your-org.teamdynamix.com/TDWebApi/api/\") }; var tdxClient = new TdxClient(httpClient, \"your-webservices-key\", \"your-beid\"); This bypasses DI scopes, Polly retry policies, DNS refresh handling, and other best practices. \uD83D\uDE80 Usage Exmaple \uD83D\uDD0D Search for a Person var results = await tdxClient.Users.Search .WithEmail(\"jdoe@yourorg.edu\") .ExecuteAsync(); \uD83D\uDCC4 Get a Ticket by ID var ticket = await tdxClient.Tickets(\"244\")[\"123456\"].GetAsync(); \uD83D\uDCDD Create a Ticket var ticketRequest = new TicketRequest { Title = \"New Hire Onboarding\", RequestorUid = \"abc-123\", Type = TicketType.OnboardingOrJobUpdate, Description = \"Provision access and equipment\", ResponsibleGroupId = \"4000\" }; var ticket = await tdxClient.Tickets(\"244\").Create(ticketRequest.MapToTicket()); \uD83D\uDCDD Create ticket cont. var ticket = await tdxClient.Tickets(\"244\").Create().WithTitle(\"...\")... // if you attempt to send without all required fields it will error our and notify you ✅ Resolve a Ticket await tdxClient.Tickets(\"244\")[\"123456\"] .SetStatus(TicketStatus.Resolved) .WithComment(\"Issue resolved by help desk.\") .UpdateAsync(); ⚙️ TdxClientOptions Customize retry/throttling behavior: var options = new TdxClientOptions { MaxRetries = 3, EnableThrottleCountdownLogging = true, OnThrottleWait = remaining => Console.WriteLine($\"Waiting {remaining.TotalSeconds}...\"), OnThrottleContinue = () => Console.WriteLine(\"Continuing.\") }; \uD83E\uDDF1 Structure TdxClient ├── People │ └── Search ├── Tickets │ ├── Create │ └── [ticketId] │ ├── Get │ ├── SetStatus │ └── AddFeedEntry \uD83D\uDCE6 Extending You can add more fluent builders by extending BaseRequestBuilder: public class AssetsRequestBuilder : BaseRequestBuilder { public AssetsRequestBuilder(TdxBaseClient client) : base(\"assets\", client) { } public Task<Asset> GetAssetAsync(string id) => SendAsync<Asset>(CreateRequest(HttpMethod.Get, id)); } \uD83E\uDDEA Testing You can mock the TdxBaseClient and HttpClient layers for unit testing. Also would recommend implementing your own httpclient purely to repoint to \uD83D\uDD10 Authentication Supports Web Services Key-based authentication. If your API uses OAuth, you’ll need to extend TdxBaseClient accordingly. \uD83D\uDCC4 License MIT \uD83D\uDE4B Support / Contribution Open an issue or submit a pull request — contributions welcome!"
  }
}